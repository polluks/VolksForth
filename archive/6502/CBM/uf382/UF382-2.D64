\\ ƒIRECTORY ULTRA∆œ“‘» 3OF4   11APR91PZ                                          ROM-RAM-SYS         &2      :::          ‘RANSˇENT-¡SˇEMBLER &4             ‡‡    ¡SSEMBLER-6502      &5:   :              2WORDS             &14                   UNLINK             &15                   SCR<>CBM           &16                   (SEARCH            Ê17 ‡‡‡               ≈DITOR           ‡ Ê19                   .BLK               &46                   ‘RACER+‘OOLS       &47                 ‡ ÕULTI-‘ASKER       Ê57                   –RINTER            &63                   –RINTER-DRIVER     &64                   –RINTER-CONTROLS   &70                   –RINTER-TOOLS      &78                                                            SCRIPTOR           &90                                                            SAVESYSTEM        &143                   FORMATDISK        &144                   COPYDISK          &145                                                                                                    \\ …NHALT ULTRA∆œ“‘» 3OF4      11APR91PZ                                          ROM RAM SYS          2 - 3               ‘RANSIENT ¡SSEMBLER  4                   ¡SSEMBLER-6502       5 - 12              2WORDS              14                   UNLINK              15                   SCR<>CBM            16                   (SEARCH             17                   ≈DITOR              19                   .BLK                46                   ‘RACER ‘OOLS        47                   ÕULTI-‘ASKER        57                   –RINTER:¡USWAHL     63                   –RINTER:¡LLGEMEIN   64 - 69              ƒRUCKERANPASSUNGEN  70 - 77              –RINTER:‘OOLS       78 - 84                                                       ”HADOWS             85 FF., DAZWISCHEN                                            ”CRIPTOR            90 - 131             UTILITIES          143 - 145                                                                                                                                       \ ROM RAM SYS              CLV/RE20AUG87 \              ”HADOW MIT √TRL+◊--->                                              \ WIRD GEBRAUCHT, WENN                   \ ”PRUENGE INS “œÕ GEHEN.                                                         ¡SSEMBLER ALSO DEFINITIONS               (16 \ ’MSCHALTEN DES ¬EREICHS 8000-∆∆∆∆  : ROM HERE 9 + $8000 U> ABORT" NOT HERE"        $FF3E STA ;                       : RAM  $FF3F STA ;                       : SYS ROM JSR RAM ;                      \  WER UNTER DIESEM ABORT" NOT HERE"     \  LEIDET: S.NAECHSTER ”CREEN --> √)                                                                                       (64 \ ’MSCHALTEN DES ¬EREICHS ¡000-¬∆∆∆  : ROM HERE 9 + $¡000 U> ABORT" NOT HERE"       $37 # LDA 1 STA ;                  : RAM $36 # LDA 1 STA ;                  √)                                                                                                                                                                                                          \ SYSÕACRO ÃONG             CLV20AUG87RE                                          (64  .( ŒICHT FUER √64 !) \\ √)                                                   \ ÕIT ÕAKRO: FUER ∆ORTGESCHRITTENE                                                HERE $8000 $20 - U> ?EXIT \ GEHT NICHT!                                           ' 0 ‹ ¡LIAS ???                                                                   ÃABEL LONG   “œÕ                         ÃABEL LONG1  ??? JSR  “¡Õ  RTS END-CODE                                           ‹ : SYSÕACRO ( ADR -- )                   $100 U/MOD  PHA  # LDA  LONG1 2+ STA     # LDA  LONG1 1+ STA  PLA  LONG JSR ;                                             : SYS ( ADR -- ) \ FUER  SR INS “œÕ       HERE 9 + $8000 U>                        …∆  SYSÕACRO  ≈Ã”≈  SYS  ‘»≈Œ ;                                                                                                                                                                                                                     \ TRANSIENT ¡SSEMBLER         CLV10OCT87                                          \ ¬ASIS: ∆ORTH ƒIMENSIONS ÷œÃ ……… ŒO. 5)                                          \ INTERNAL LOADING         04MAY85¬–/RE)                                          HERE   $800 HALLOT  HEAP DP !                                                              1  +LOAD                                                                 DP !                                                                              œ∆ORTH-6502 ¡SSEMBLER        CLV10OCT87                                          \ ¬ASIS: ∆ORTH ƒIMENSIONS ÷œÃ ……… ŒO. 5)                                          œNLYFORTH  ¡SSEMBLER ALSO DEFINITIONS                                             1 7  +THRU                                -3  +LOAD \ ÕAKROS: ROM RAM SYS                                                  œ∆ORTH-83 6502-¡SSEMBLER      20OCT87RE                                          : END-CODE   CONTEXT 2- @  CONTEXT ! ;                                            √REATE INDEX                             $0909 , $1505 , $0115 , $8011 ,          $8009 , $1ƒ0ƒ , $8019 , $8080 ,          $0080 , $1404 , $8014 , $8080 ,          $8080 , $1√0√ , $801√ , $2√80 ,                                                   ‹ ÷ARIABLE MODE                                                                   : ÕODE:  ( N -)   √REATE C,                ƒOES>  ( -)     C@ MODE ! ;                                                     0   ÕODE: .¡        1    ÕODE: #         2 ‹ ÕODE: MEM       3    ÕODE: ,ÿ        4   ÕODE: ,Ÿ        5    ÕODE: ÿ)        6   ÕODE: )Ÿ       $∆    ÕODE: )                                                                                                                                                                                                                                                              \ UPMODE  CPU                  20OCT87RE                                          ‹ : UPMODE ( ADDR0 F0 - ADDR1 F1)         …∆ MODE @  8 OR MODE !   ‘»≈Œ            1 MODE @  $∆ AND ?DUP …∆                 0 ƒœ  DUP +  Ãœœ– ‘»≈Œ                   OVER 1+ @ AND 0= ;                                                               : CPU  ( 8B -)   √REATE  C,                ƒOES>  ( -)    C@ C, MEM ;                                                       00 CPU BRK $18 CPU CLC $ƒ8 CPU CLD      $58 CPU CLI $¬8 CPU CLV $√¡ CPU DEX      $88 CPU DEY $≈8 CPU INX $√8 CPU INY      $≈¡ CPU NOP $48 CPU PHA $08 CPU PHP      $68 CPU PLA $28 CPU PLP $40 CPU RTI      $60 CPU RTS $38 CPU SEC $∆8 CPU SED      $78 CPU SEI $¡¡ CPU TAX $¡8 CPU TAY      $¬¡ CPU TSX $8¡ CPU TXA $9¡ CPU TXS      $98 CPU TYA                                                                                                                                                                                                                                          \ M/CPU                        20OCT87RE                                          : M/CPU  ( MODE OPCODE -)  √REATE C, ,    ƒOES>                                    DUP 1+ @ $80 AND …∆ $10 MODE +! ‘»≈Œ     OVER $∆∆00 AND UPMODE UPMODE             …∆ MEM TRUE ¡BORT" INVALID" ‘»≈Œ         C@ MODE @ INDEX + C@ + C, MODE @ 7 AND   …∆ MODE @  $∆ AND 7 <                     …∆ C, ≈Ã”≈ , ‘»≈Œ ‘»≈Œ MEM ;                                                    $1√6≈ $60 M/CPU ADC $1√6≈ $20 M/CPU AND  $1√6≈ $√0 M/CPU CMP $1√6≈ $40 M/CPU EOR  $1√6≈ $¡0 M/CPU LDA $1√6≈ $00 M/CPU ORA  $1√6≈ $≈0 M/CPU SBC $1√6√ $80 M/CPU STA  $0ƒ0ƒ $01 M/CPU ASL $0√0√ $√1 M/CPU DEC  $0√0√ $≈1 M/CPU INC $0ƒ0ƒ $41 M/CPU LSR  $0ƒ0ƒ $21 M/CPU ROL $0ƒ0ƒ $61 M/CPU ROR  $0414 $81 M/CPU STX $0486 $≈0 M/CPU CPX  $0486 $√0 M/CPU CPY $1496 $¡2 M/CPU LDX  $0√8≈ $¡0 M/CPU LDY $048√ $80 M/CPU STY  $0480 $14 M/CPU JSR $8480 $40 M/CPU JMP  $0484 $20 M/CPU BIT                                                                                                       \ ¡SSEMBLER CONDITIONALS       20OCT87RE                                          ‹ : RANGE?   ( BRANCH -- BRANCH )         DUP ABS  $7∆ U> ¡BORT" OUT OF RANGE " ;                                          : [[  ( ¬≈«…Œ)  HERE ;                                                            : ?]  ( ’Œ‘…Ã)  C, HERE 1+ - RANGE? C, ;                                          : ?[  ( …∆)     C,  HERE 0 C, ;                                                   : ?[[ ( ◊»…Ã≈)  ?[ SWAP ;                                                         : ]?  ( ‘»≈Œ)   HERE OVER C@  …∆ SWAP !   ≈Ã”≈ OVER 1+ - RANGE? SWAP C! ‘»≈Œ ;                                             : ][  ( ≈Ã”≈)   HERE 1+   1 JMP           SWAP HERE OVER 1+ - RANGE?  SWAP C! ;                                            : ]]  ( ¡«¡…Œ)  JMP ;                                                             : ]]? ( “≈–≈¡‘) JMP ]? ;                                                                                                                                           \ ¡SSEMBLER CONDITIONALS       20OCT87RE                                          $90 √ONSTANT √”     $¬0 √ONSTANT √√      $ƒ0 √ONSTANT 0=     $∆0 √ONSTANT 0<>     $10 √ONSTANT 0<     $30 √ONSTANT 0>=     $50 √ONSTANT ÷”     $70 √ONSTANT ÷√                                               : NOT    $20 [ ∆ORTH ] XOR ;                                                      : BEQ    0<> ?] ;   : BMI   0>= ?] ;     : BNE    0=  ?] ;   : BPL   0<  ?] ;     : BCC    √”  ?] ;   : BVC   ÷”  ?] ;     : BCS    √√  ?] ;   : BVS   ÷√√” ?[  SWAP 1+ INC  ]?  ;                                               : 2DEC  ( ADR -- )                        DUP LDA  SEC  2 # SBC                    DUP STA  √√ ?[  SWAP 1+ DEC  ]?  ;                                               : WINC  ( ADR -- )                        DUP INC  0= ?[  SWAP 1+ INC  ]?  ;                                               : WDEC  ( ADR -- )                        DUP LDA  0= ?[  OVER 1+ DEC  ]?  DEC  ;                                          : ;C:                                     RECOVER JSR  END-CODE ]  0 LAST !  0 ;                                                                                                                                                                                                                                                                                                \ ;CODE √ODE CODE>          BP/RE03FEB85                                          œNLYFORTH                                                                         : ¡SSEMBLER                               ¡SSEMBLER   [ ¡SSEMBLER ] MEM ;                                                  : ;√ODE                                   [COMPILE] ƒOES>  -3 ALLOT                [COMPILE] ;      -2 ALLOT   ¡SSEMBLER ; IMMEDIATE                                                                         : √ODE  √REATE HERE DUP 2- ! ¡SSEMBLER ;                                          : >LABEL  ( ADR -)                        HERE ‹ √REATE  IMMEDIATE  SWAP ,         4 HALLOT HEAP 1 AND HALLOT ( 6502-ALIG)  HERE 4 - HEAP  4  CMOVE                  HEAP LAST @ COUNT $1∆ AND + !  DP !       ƒOES>  ( - ADR)   @                      STATE @ …∆  [COMPILE] ÃITERAL  ‘»≈Œ ;                                           : ÃABEL                                   [ ¡SSEMBLER ]  HERE >LABEL ¡SSEMBLER ;                                          \ EIN CASE-OF-KONSTRUKT        07APR91PZ ‹ VARIABLE CASELINK                                                                 : CASE ( -- ) ( COMP: -- N 10 )             CASELINK @ CASELINK OFF  10 ;           IMMEDIATE RESTRICT                                                              : OF ( N1 N2 -- N1/-- )                     COMPILE CASE?                            COMPILE ?BRANCH >MARK 11 ;              IMMEDIATE RESTRICT                                                              : ENDOF ( -- )                              COMPILE BRANCH  HERE                     CASELINK @ ,  CASELINK !                 11 ?PAIRS  >RESOLVE ;                   IMMEDIATE RESTRICT                                                              : ELSECASE ;  IMMEDIATE RESTRICT                                                  : ENDCASE   10 ?PAIRS                       CASELINK @ ¬≈«…Œ ?DUP ◊»…Ã≈              DUP @ SWAP >RESOLVE “≈–≈¡‘               CASELINK ! ;                            IMMEDIATE RESTRICT                  \ 2! 2@ 2VARIABLE 2CONSTANT CLV20AUG87RE                                          √ODE 2!  ( D ADR --)                      TYA  SETUP JSR  3 # LDY                  [[  ”– )Ÿ LDA  Œ )Ÿ STA  DEY  0< ?]      1 # LDY  –OPTWO JMP  END-CODE                                                    √ODE 2@  ( ADR -- D)                      ”– ÿ) LDA  Œ STA  ”– )Ÿ LDA  Œ 1+ STA    ”– 2DEC  3 # LDY                         [[  Œ )Ÿ LDA  ”– )Ÿ STA  DEY  0< ?]      XYŒEXT JMP  END-CODE                                                             : 2÷ARIABLE  ( --)   √REATE 4 ALLOT ;                 ( -- ADR)                                                            : 2√ONSTANT  ( D --)   √REATE , ,          ƒOES> ( -- D)   2@ ;                                                            \ 2DUP  EXISTS                           \ 2SWAP EXISTS                           \ 2DROP EXISTS                                                                                                                                                     \ UNLINK                    CLV20AUG87RE                                          $∆∆∆0 >LABEL PLOT                                                                 (64                                                                               √ODE UNLINK  ( -- )                        $288 LDA  $80 # ORA  TAY  TXA            [[  $ƒ9 ,ÿ STY  CLC  $28 # ADC            √” ?[  INY  ]?  INX  $1¡ # CPX  0= ?]   $ƒ3 LDA  $28 # CMP                       √” ?[  $28 # SBC  $ƒ3 STA  ]?            $ƒ3 LDY  $ƒ6 LDX  CLC  PLOT JSR √)                                              (16 : UNLINK  0 0  $7≈≈ 2! ; √)                                                   ÃABEL SETPTRS                             0 # LDX  1 # LDY  ŒEXT JMP  END-CODE                                                                                                                                                                                                                                                                                                  ( CHANGING CODES              18MAY85WE) ( ◊IE GUT, DASS COMMODORE ...          ) ( ... BESONDERE SCREEN-CODES HAT.      )                                          ÃABEL (SCR>CBM                            Œ 6 + STA $3∆ # AND  Œ 6 + ASL           Œ 6 + BIT  0< ?[ $80 # ORA  ]?                      ÷√ ?[ $40 # ORA  ]?  RTS                                              ÃABEL (CBM>SCR                            Œ 6 + STA $7∆ # AND $20 # CMP            √” ?[ $40 # CMP                             √” ?[ $1∆ # AND  Œ 6 + BIT                  0< ?[ $40 # ORA  ]?  ]?  RTS  ]?   ¡SCII . # LDA  RTS                                                               √ODE CBM>SCR  ( 8B1 -- 8B2)               ”– ÿ) LDA  (CBM>SCR JSR  ”– ÿ) STA       ŒEXT JMP  END-CODE                                                               √ODE SCR>CBM  ( 8B1 -- 8B2)               ”– ÿ) LDA  (SCR>CBM JSR  ”– ÿ) STA       ŒEXT JMP  END-CODE                                                                                                       \ SCHNELLES SEARCH        BP   17JUN85RE                                          \NEEDS √ODE -$ƒ +LOAD \ ‘RANS ¡SSEMBLER                                           œNLYFORTH                                                                          ' 0< @ 4 +  >LABEL PUTTRUE              PUTTRUE 3 +  >LABEL PUTFALSE                                                      √ODE (SEARCH                             ( TEXT TLEN BUFFER BLEN -- ADR TF / FF)   7 # LDY                                  [[  ”– )Ÿ LDA  Œ ,Ÿ STA DEY  0< ?]       [[ Œ 4 + LDA  Œ 5 + ORA  0<> ?[          [[ Œ     LDA   Œ 1+ ORA  0<> ?[             Œ 2+ ÿ) LDA  Œ 6 + ÿ) CMP  SWAP          0<> ?[[  Œ WDEC  Œ 2+ WINC  ]]?                                               -->                                                                                                                                                                                                                                                                                           \ ≈DI SCHNELLES SEARCH    BP   17JUN85RE                                           7 # LDY                                  [[  Œ ,Ÿ LDA  ”– )Ÿ STA  DEY  0< ?]      [[  Œ 2+ WINC  Œ 6 + WINC  Œ WDEC        Œ 4 + WDEC  Œ 4 + LDA  Œ 5 + ORA         0= ?[  ”– LDA  CLC  4 # ADC  ”– STA             √” ?[  ”– 1+ INC  ]?                     3 # LDY  Œ 3 + LDA  ”– )Ÿ STA            Œ 2+ LDA  DEY  ”– )Ÿ STA  DEY            PUTTRUE JMP  ]?                   Œ LDA  Œ 1+ ORA  0= ?[                   3 ROLL  3 ROLL ]? ]?                     ”– LDA  CLC  6 # ADC  ”– STA             √” ?[  ”– 1+ INC ]?   1 # LDY            PUTFALSE JMP  ]?                         Œ 2+ ÿ) LDA  Œ 6 + ÿ) CMP  0= NOT ?]     7 # LDY                                  [[ ”– )Ÿ LDA  Œ ,Ÿ STA  DEY  0< ?]       Œ WDEC  Œ 2+ WINC                        ( NEXT CHAR AS FIRST )  ]]  END-CODE                                                                                                                                                                       \ ≈DITOR LOADSCREEN           CLV13JUL87 \ …DEA AND FIRST IMPLEMENTATION:  ◊≈/RE                                           œNLYFORTH                                \NEEDS .BLK       $1¬ +LOAD \ .BLK       \NEEDS √ODE       -$∆ +LOAD \ ¡SSEMBL    \NEEDS (SEARCH     -2 +LOAD \ (SEARCH                                             œNLYFORTH                                (64 ‹ : AT  AT CUROFF ; √) \ SORRY                                                \NEEDS 2VARIABLE  -5 +LOAD               \NEEDS UNLINK     -4 +LOAD  \ UNLINK     \NEEDS SCR>CBM    -3 +LOAD  \ CBM><SCR                                            ÷OCABULARY ≈DITOR                        ≈DITOR ALSO DEFINITIONS                                                                           1 $17 +THRU  \ ≈DITOR                  $18 $19 +THRU  \ EDIT-VIEW                   $1¡ +LOAD  \ ≈DIBOARD                                           œNLYFORTH  1 SCR !  0 R# !                                                        SAVE                                    \ ≈DI √ONSTANTS ÷ARIABLES     CLV15JUL87                                          $28 ‹ √ONSTANT #COL $19 ‹ √ONSTANT #ROW  #COL  #ROW  *           ‹ √ONSTANT B/SCR   ÷ARIABLE SHADOW   $55 SHADOW !         ‹ ÷ARIABLE ASCR     1 ASCR !             ‹  ÷ARIABLE IMODE   IMODE OFF            ‹ ÷ARIABLE CHAR     #CR CHAR !           ‹ ÷ARIABLE SCROLL   SCROLL ON            ‹ ÷ARIABLE SEND     1 SEND !             ‹ 2VARIABLE CHARS   ‹ 2VARIABLE LINES    ‹ 2VARIABLE FBUF    ‹ 2VARIABLE RBUF                                              (64 $288 √)  (16 $53E √)  >ÃABEL SCRADR  (64 $D800 √) (16 $800 √)  >ÃABEL COLADR                                           $D1  (16 DROP $C8 √) ‹ √ONSTANT LINPTR   $D3  (16 DROP $CA √) ‹ √ONSTANT CUROFS                                            (64 $ƒ020 √) (16 $FF19 √)                 ‹ √ONSTANT BORDER                       (64 $286  √) (16 $53B √) ‹ √ONSTANT PEN  (64 $D021 √) (16 $FF15 √)                 ‹ √ONSTANT BKGRND                                                               ( ≈DI SPECIAL CMOVES         CLV21.3.87) ( ƒANK AN COMMODORE ...                )                                          ÃABEL INCPOINTER                          Œ    LDA  CLC  #COL 1+ # ADC             Œ    STA  √” ?[  Œ 1+  INC  ]?           Œ 2+ LDA  CLC  #COL    # ADC             Œ 2+ STA  √” ?[  Œ 3 + INC  ]?  RTS                                              ‹ √ODE B>SC   ( BLKADR --)                TYA  SETUP JSR                           Œ 2+ STX  SCRADR LDA  Œ 3 + STA          #ROW # LDX                               [[  #COL 1- # LDY                            [[  Œ    )Ÿ LDA  (CBM>SCR JSR                Œ 2+ )Ÿ STA  DEY  0< ?]              INCPOINTER JSR  DEX                  0= ?]                                    PEN LDA                                  [[ COLADR        ,ÿ STA                     COLADR $100 + ,ÿ STA                     COLADR $200 + ,ÿ STA                     COLADR $300 + ,ÿ STA                     INX  0= ?]  SETPTRS JMP   END-CODE                                           ( ≈DI SPECIAL CMOVES CONT.   CLV21.3.87) ( ... FUER DIES ¬ILDSCHIRMFORMAT.      )                                          ‹ √ODE SC>B   ( BLKADR --)                TYA  SETUP JSR                           Œ 2+ STX  SCRADR LDA  Œ 3 + STA          #ROW # LDX                               [[  0 # LDY                                  [[  Œ 2+ )Ÿ LDA  (SCR>CBM JSR                Œ )Ÿ STA  INY  #COL # CPY √” ?]      DEX                                  0<> ?[[                                      BL # LDA  Œ )Ÿ STA                       INCPOINTER JSR                       ]]?  SETPTRS JMP  END-CODE                                                       ‹ √ODE >SCRMOVE  ( FROM TO 8BQUAN --)     3 # LDA  SETUP JSR  DEY                  [[  Œ CPY  0= ?[  SETPTRS JMP  ]?            Œ 4 + )Ÿ LDA  (CBM>SCR JSR               Œ 2+  )Ÿ STA  INY  0= ?]  END-CODE                                                                                                                                                                     ( ≈DI CHANGED?               CLV21.3.87)                                          ‹ √ODE CHANGED?   ( BLKADR -- F)          TYA  SETUP JSR                           Œ 2+ STX  SCRADR LDA  Œ 3 + STA          #ROW # LDX                               [[  #COL 1- # LDY                            [[  Œ )Ÿ LDA  (CBM>SCR JSR                   Œ 2+ )Ÿ CMP                              0<> ?[  $∆∆ # LDA  –USH¡ JMP ]?          DEY 0<  ?]                           INCPOINTER JSR  DEX                  0= ?]                                    TXA  –USH¡ JMP  END-CODE                                                         ‹ : MEMTOP  SP@ #COL 2* - ;                                                                                                                                                                                                                                                                                                                                                                                              \ ≈DI C64-SPECIALS           CLV2:JULL87                                          ‹ √ODE SCRSTART  ( -- ADR)                TXA PHA SCRADR LDA  –USH JMP END-CODE                                                                                     ‹ √ODE ROWADR  ( -- ADR)                  CUROFS LDA  #COL # CMP  TXA              √” ?[  #COL 1- # LDA  ]?                 LINPTR ADC PHA LINPTR 1 + LDA  0 # ADC   –USH JMP  END-CODE                                                               ‹ √ODE CURADR  ( -- ADR)                  CLC CUROFS LDA LINPTR ADC  PHA           LINPTR 1 + LDA 0 # ADC –USH JMP          END-CODE                                (64                                      ‹ √ODE UNLINKED?     \ -- F               $ƒ5 LDA  #COL # CMP  √√ ?[  DEX  ]?      TXA  –USH¡ JMP  END-CODE √)                                                                                                                                                                                                                         \ ≈DI SCROLL? PUT/INSERT/DO  CLV2:JULL87                                          ‹ : BLANK.END?  ( -- F)                   SCRSTART [ B/SCR #COL - ] ÃITERAL +      #COL -TRAILING NIP  0=  SCROLL @ OR ;                                            ‹ : ATLAST?  ( -- F)                      CURADR  SCRSTART B/SCR + 1-  =           SCROLL @ 0=  AND ;                                                               ‹ : PUTCHAR  ( -- F)                      CHAR C@ CON! FALSE ;                                                             ‹ : INSERT  ( -- F)                       ATLAST?  ?DUP ?EXIT                     (64  UNLINKED? √) (16 TRUE √)             ROWADR #COL + 1- C@  BL = NOT  AND       BLANK.END? NOT  AND  DUP ?EXIT           $94 CON! ;                                                                       ‹ : DOCHAR  ( -- F)                       ATLAST?  ?DUP ?EXIT                      IMODE @ …∆ INSERT ?DUP ?EXIT             ‘»≈Œ PUTCHAR ;                                                                  ( ≈DI CURSOR CONTROL          15MAY85RE)                                          ‹ : CURDOWN  ( -- F)                      SCROLL @ 0=  ROW  #ROW 2-  U>  AND       DUP ?EXIT $11 CON! ;                                                             ‹ : CURRITE  ( -- F)                      ATLAST? DUP ?EXIT $1ƒ CON! ;                                                     ' PUTCHAR ‹ ¡LIAS CURUP                  ' PUTCHAR ‹ ¡LIAS CURLEFT                ' PUTCHAR ‹ ¡LIAS HOME                   ' PUTCHAR ‹ ¡LIAS DELETE                                                          ‹ : >""END  ( -- FF)                      SCRSTART B/SCR -TRAILING NIP             B/SCR 1- MIN #COL /MOD SWAP AT FALSE ;                                           ‹ : +TAB  ( -- F)                         0  $A 0 ƒœ  DROP CURRITE DUP                        …∆ Ã≈¡÷≈ ‘»≈Œ  Ãœœ– ;                                                 ‹ : -TAB  ( -- F)                         5 0 ƒœ $9ƒ CON!  Ãœœ–  FALSE ;                                                  ( ≈DI CR, CLEAR/NEWLINE       12JUN85RE)                                          ‹ : <CR>  ( -- F)                         ROW 0 AT  UNLINK  IMODE OFF  CURDOWN ;                                           ‹ : CLRLINE  ( -- FF)                     ROWADR #COL BL FILL FALSE ;                                                      ‹ : CLRRIGHT  ( -- FF)                    CURADR #COL COL - BL FILL FALSE ;                                                ‹ : KILLINE  ( -- F)                      ROWADR DUP #COL + SWAP                   SCRSTART $3√0 + DUP >R                   OVER - CMOVE                             R> #COL BL FILL FALSE ;                                                          ‹ : NEWLINE  ( -- F)                      BLANK.END? NOT  ?DUP ?EXIT               ROWADR DUP #COL + SCRSTART B/SCR +       OVER - CMOVE>  CLRLINE ;                                                                                                                                                                                   ( ≈DI CHARACTER HANDLING      18JUN85RE)                                          ‹ : DCHAR  ( -- F)                        CURRITE  DUP ?EXIT $14 CON! ;                                                    ‹ : @CHAR  ( -- F)                        CHARS 2@ + 1+  LINES @ MEMTOP MIN        U>  DUP ?EXIT                            CURADR C@  CHARS 2@ +  C!                1 CHARS 2+ +! ;                                                                  ‹ : COPYCHAR  ( -- F)                     @CHAR  ?DUP ?EXIT  CURRITE ;                                                     ‹ : CHAR>BUF  ( -- F)                     @CHAR  ?DUP ?EXIT  DCHAR ;                                                       ‹ : BUF>CHAR  ( -- F)                     CHARS 2+ @ 0=  ?DUP ?EXIT                INSERT        DUP ?EXIT                  -1 CHARS 2+ +!                           CHARS 2@ +  C@  CURADR C! ;                                                                                                                                       ( ≈DI LINE HANDLING, IMODE    18JUN85RE)                                          ‹ : @LINE  ( -- F)                        LINES 2@ +  MEMTOP  U>  DUP ?EXIT        ROWADR  LINES 2@ +  #COL  CMOVE          #COL LINES 2+ +! ;                                                               ‹ : COPYLINE  ( -- F)                     @LINE  ?DUP ?EXIT  CURDOWN ;                                                     ‹ : LINE>BUF  ( -- F)                     @LINE  ?DUP ?EXIT  KILLINE ;                                                     ‹ : !LINE  ( --)                          #COL NEGATE LINES 2+ +!                  LINES 2@ +  ROWADR  #COL  CMOVE  ;                                               ‹ : BUF>LINE  ( -- F)                     LINES 2+ @ 0=  ?DUP ?EXIT                NEWLINE  DUP ?EXIT  !LINE ;                                                      ‹ : SETIMD  ( -- F)   IMODE ON FALSE ;                                            ‹ : CLRIMD  ( -- F)   IMODE OFF FALSE ;                                          ( ≈DI THE STAMP               17JUN85RE)                                          ∆ORTH DEFINITIONS                        : RVSON $12 CON! ;  : RVSOFF $92 CON! ;                                           √ODE ***ULTRA∆œ“‘»83***                       ŒEXT HERE 2- !  END-CODE            : ∆ORTH-«ESELLSCHAFT   [COMPILE] \\ ;    IMMEDIATE                                                                         ≈DITOR DEFINITIONS                       √REATE STAMP$ $12 ALLOT STAMP$ $12 ERASE                                          ‹ : .STAMP  ( -- FF)                      STAMP$ 1+ COUNT  SCRSTART #COL +         OVER -   SWAP >SCRMOVE FALSE ;                                                   : GETSTAMP  ( --)                         INPUT PUSH  KEYBOARD  STAMP$ ON          CR ." YOUR STAMP: "  RVSON $10 SPACES    ROW $√ AT  STAMP$ 2+ $10 EXPECT          RVSOFF  SPAN @ STAMP$ 1+ C! ;                                                    ‹ : STAMP?  ( --)                         STAMP$ C@ ?EXIT GETSTAMP ;             \ ≈DI THE SCREEN#             CLV01AUG87                                          ‹ : SAVETOP  ( --)                        SCRSTART PAD #COL 2* CMOVE               SCRSTART #COL 2* $¡0 FILL ;             ‹ : RESTTOP  ( --)                        PAD SCRSTART #COL 2* CMOVE ;            ‹ : UPDATED?  ( SCR# -- N)                BLOCK 2- @ ;                            ‹ : SPECIAL  ( --)                        CURON ¬≈«…Œ PAUSE KEY? ’Œ‘…Ã CUROFF ;                                            ‹ : DRV”CR ( --DRV SCR')                  SCR @ OFFSET @ + BLK/DRV U/MOD SWAP ;                                            ‹ : .SCR#  ( -- FF) AT? SAVETOP  RVSON    0 0 AT DRV”CR ." ”CR # " . ." ƒRV " .    SCR @ UPDATED? 0=                        …∆ ." NOT " ‘»≈Œ ." UPDATED"  1 1 AT     [ ' ***ULTRA∆œ“‘»83*** >NAME ] ÃITERAL   COUNT TYPE 2 SPACES                      [ ' ∆ORTH-«ESELLSCHAFT >NAME ] ÃITERAL   COUNT $1∆ AND TYPE                       RVSOFF AT SPECIAL RESTTOP FALSE ;                                               ( ≈DI EXITS                   20MAY85RE)                                          ‹ : AT?>R#  ( --)                         AT? SWAP #COL 1+ * + R# ! ;                                                      ‹ : R#>AT  ( --)                          R# @  DUP  #COL 1+  MOD  #COL =  -       B/BLK 1- MIN  #COL 1+  /MOD  SWAP AT ;                                           ‹ : CANCEL  ( -- N)                       UNLINK  %0001  AT?>R# ;                                                          ‹ : EUPDATE ( -- N)                       CANCEL  SCR @ BLOCK CHANGED?             …∆ .STAMP DROP  SCR @ BLOCK SC>B            UPDATE %0010 OR ‘»≈Œ ;                                                        ‹ : ESAVE   ( -- N)   EUPDATE %0100 OR ;                                          ‹ : ELOAD   ( -- N)   ESAVE   %1000 OR ;                                                                                                                                                                                                             \ LEAF THRU ≈DI               CLV01AUG87                                          ‹ : ELIST  ( -- FF)                       SCR @ BLOCK B>SC  IMODE OFF  UNLINK      R#>AT  FALSE ;                                                                   ‹ : NEXT    ( -- FF)                      EUPDATE DROP  1 SCR +!  ELIST ;                                                  ‹ : BACK    ( -- FF)                      EUPDATE DROP -1 SCR +!  ELIST ;                                                  ‹ : >SHADOW  ( -- FF)                     EUPDATE DROP  SHADOW @ DUP DRV”CR NIP    U> NOT …∆ NEGATE ‘»≈Œ  SCR +!  ELIST ;                                           ‹ : ALTER  ( -- FF)                       EUPDATE DROP  ASCR @  SCR @              ASCR !  SCR !  ELIST ;                                                                                                                                                                                                                                                                       \ ≈DI DIGITS                    2OCT87RE                                          ∆ORTH DEFINITIONS                                                                 : DIGDECODE  ( ADR CNT1 KEY -- ADR CNT2)  #BS CASE?   …∆  DUP  …∆                                  DEL 1- ‘»≈Œ EXIT ‘»≈Œ    #CR CASE?   …∆  DUP SPAN !  EXIT ‘»≈Œ    CAPITAL DUP DIGIT?                       …∆  DROP >R 2DUP + R@ SWAP C!                R> EMIT  1+  EXIT  ‘»≈Œ  DROP ;                                              …NPUT: DIGITS                             C64KEY C64KEY? DIGDECODE C64EXPECT ;                                             ≈DITOR DEFINITIONS                                                                ‹ : REPLACE  ( -- F)                      FBUF @ 0 ƒœ  #BS CON!  Ãœœ–              FALSE RBUF @ 0 ƒœ INSERT OR Ãœœ–         DUP ?EXIT                                RBUF 2@ CURADR SWAP >SCRMOVE             EUPDATE DROP ;                                                                                                           ( ≈DI >BUFS                   20NOV85RE)                                          ‹ : .BUF  ( ADR COUNT --)                 TYPE ¡SCII < EMIT                        #COL 1- COL - SPACES ;                                                           ‹ : >BUFS  ( --)                          INPUT PUSH                               UNLINK SAVETOP AT?  RVSON                1 0 AT ." REPLACE WITH: "                AT? RBUF 2@ .BUF                         0 0 AT ." >     SEARCH: "                AT? FBUF 2@ .BUF                         0 2  2DUP AT  SEND @ 3 U.R  2DUP AT      HERE 1+ 3 DIGITS EXPECT  SPAN @ ?DUP     …∆  HERE UNDER C!  NUMBER DROP SEND !        ‘»≈Œ  AT  SEND @ 3 U.R  KEYBOARD     2DUP AT FBUF 2+ @  #COL 2- COL - EXPECT  SPAN @ ?DUP …∆  FBUF !  ‘»≈Œ             AT FBUF 2@ .BUF                          2DUP AT RBUF 2+ @  #COL 2- COL - EXPECT  SPAN @ ?DUP …∆  RBUF !  ‘»≈Œ             AT RBUF 2@ .BUF                          RVSOFF RESTTOP AT ;                                                             \ ≈DI ESEARCH                 CLV06AUG87                                          ‹ : (F      ELIST DROP                    FBUF 2@  R# @  SCR @ BLOCK  +            B/BLK R# @ - (SEARCH 0=                  …∆  0  ≈Ã”≈  SCR @ BLOCK -  ‘»≈Œ         R# !  R#>AT ;                                                                    ‹ : ESEARCH  ( -- F)                      EUPDATE DROP  >BUFS                      ¬≈«…Œ ¬≈«…Œ  (F  R# @                          ◊»…Ã≈  KEY  DUP ¡SCII R =                       …∆ REPLACE ?DUP                             …∆ NIP EXIT ‘»≈Œ ‘»≈Œ                 3 = ?DUP ?EXIT                    “≈–≈¡‘  DRV”CR NIP SEND @ -              STOP? 0= AND ?DUP                  ◊»…Ã≈ 0< …∆   NEXT DROP                           ≈Ã”≈ BACK DROP ‘»≈Œ             “≈–≈¡‘ TRUE ;                                                                                                                                                                                                                                       \ ≈DI KEYTABLE               CLV2:JULL87 ‹ : √TRL  ( -- 8B)                        [COMPILE] ¡SCII $40 - ; IMMEDIATE       ‹ √REATE KEYTABLE                        √TRL N C, √TRL B C, √TRL W C, √TRL A C,  $1∆ C, (64 √TRL ^ √)      (16 $92 √) C,  $0ƒ C,   $8ƒ C,                          √TRL C C, √TRL X C, √TRL F C, √TRL L C,  $85 C,   $89 C,    $86 C,    $8¡ C,      $9∆ C,   $1√ C, (64 00 √) (16 $1E √) C,  $8¬ C,   $87 C,    $88 C,    $8√ C,      $1ƒ C,   $11 C,    $9ƒ C,    $91 C,      $13 C,   $93 C,    $94 C,                $14 C,    √TRL D C, √TRL E C, √TRL R C,  √TRL I C, √TRL O C,                                                   $FF C,                                                                                                                                                                                                                                                                                                                                                                                      ( ≈DI ACTIONTABLE             CLV9.4.87)                                                                                   ‹ √REATE ACTIONTABLE ]                   NEXT      BACK      >SHADOW   ALTER      ESEARCH   COPYLINE                       <CR>      <CR>                           CANCEL    EUPDATE   ESAVE     ELOAD      NEWLINE   KILLINE   BUF>LINE  LINE>BUF   .STAMP    .SCR#           COPYCHAR       CHAR>BUF  BUF>CHAR  +TAB      -TAB       CURRITE   CURDOWN   CURLEFT   CURUP      HOME      >""END    INSERT               DELETE    DCHAR     CLRLINE   CLRRIGHT   SETIMD    CLRIMD                                                       DOCHAR  [  ‹ √ODE FINDKEY  ( KEY N -- ADR)           2 # LDA  SETUP JSR  Œ LDY  DEY           [[  INY  KEYTABLE ,Ÿ LDA  $∆∆ # CMP          0<> ?[  Œ 2+ CMP  ]?  0= ?]          TYA  .¡ ASL  TAY                         ACTIONTABLE    ,Ÿ LDA  PHA               ACTIONTABLE 1+ ,Ÿ LDA  –USH JMP         END-CODE                                                                         ( ≈DI SHOW ERRORS            CLV21.3.87)                                                                                   ' 0   ‹ ¡LIAS DARK                                                                ' 1   ‹ ¡LIAS LIGHT                                                               ‹ : HALF  ( N --)                         BORDER C!  PAUSE $80 0 ƒœ Ãœœ– ;                                                 ‹ : BLINK ( --)                           BORDER PUSH  DARK HALF LIGHT HALF                     DARK HALF LIGHT HALF ;                                              ‹ : ?BLINK ( F1 -- F2)                    DUP TRUE = …∆  BLINK 0=  ‘»≈Œ ;                                                                                                                                                                                                                                                                                                                                                                                         ( ≈DI INIT                    18JUN85RE)                                          ' ÃITERAL ‹ ¡LIAS ÃI  IMMEDIATE                                                   ÷ARIABLE (PAD       0 (PAD !                                                      ‹ : CLEARBUFFER  ( --)                    PAD       DUP  (PAD  !                   #COL 2* + DUP  FBUF  2+ !                #COL    + DUP  RBUF  2+ !                #COL    + DUP  CHARS !                   #COL 2* +      LINES !                   CHARS 2+ OFF  LINES 2+ OFF               [ ' ***ULTRA∆œ“‘»83*** >NAME ] ÃI        COUNT >R FBUF 2+ @ R@ CMOVE R> FBUF !    [ ' ∆ORTH-«ESELLSCHAFT >NAME ] ÃI        COUNT $1∆ AND >R                         RBUF 2+ @ R@ CMOVE R> RBUF ! ;                                                   ‹ : INITPTR ( --)                         PAD (PAD @ = ?EXIT CLEARBUFFER ;                                                                                                                                                                           \ ≈DI SHOW                    CLV15JUL87                                          ' NAME >BODY 6 +  ‹ √ONSTANT 'NAME       (16 \ C16 BENUTZT STANDARD √)                                                     (64                                      ‹ √ODE CURON                              $ƒ3 LDY    $ƒ1 )Ÿ LDA  $√≈ STA           $80 # EOR  $ƒ1 )Ÿ STA                    XYŒEXT JMP  END-CODE                                                             ‹ √ODE CUROFF                             $√≈ LDA  $ƒ3 LDY  $ƒ1 )Ÿ STA             XYŒEXT JMP  END-CODE                                                             √)                                                                                                                                                                                                                                                                                                                                                                                                                       ( ≈DI SHOW                    17JUN85RE)                                          ‹ : SHOWOFF                               ['] EXIT 'NAME !  RVSOFF  CUROFF ;                                               ‹ : SHOW  ( --)                           BLK @ ?DUP 0= …∆  SHOWOFF EXIT  ‘»≈Œ     >IN @ 1-  R# !  RVSOFF CUROFF RVSON      SCR @  OVER - …∆  SCR !  ELIST           1 0 AT .STATUS ‘»≈Œ R#>AT CURON DROP ;                                           ∆ORTH DEFINITIONS                                                                 : (LOAD  ( BLK POS --)                    >IN PUSH  >IN !  ?DUP 0= ?EXIT           BLK PUSH  BLK !  .STATUS INTERPRET ;                                             : SHOWLOAD  ( BLK POS -)                  SCR PUSH  SCR OFF  R# PUSH               ['] SHOW 'NAME ! (LOAD SHOWOFF ;                                                 ≈DITOR DEFINITIONS                                                                                                                                                 \ ≈DI EDIT                    CLV01AUG87 ‹ : SETCOL ( 0 / 4 / 8 --)                INK-POT +                                DUP C@ BORDER C! DUP 1+ C@ BKGRND C!      2+ C@ PEN C! ;                         ‹ : (EDIT  ( -- N)                        4 SETCOL $93 CON!                        ELIST DROP  SCROLL OFF                   ¬≈«…Œ KEY DUP CHAR C!                      0 FINDKEY EXECUTE ?BLINK ?DUP ’Œ‘…Ã    0 0 AT KILLINE DROP  SCROLL ON           0 SETCOL (16 0 $7EA C! √) \ ¡PPEND-ÕODE ;                                        ∆ORTH DEFINITIONS                        : EDIT ( SCR# -) (16 C64FKEYS √)          SCR !  STAMP?  INITPTR  (EDIT            $18 0 AT  DRV”CR ." ”CR " . ." ƒRV " .   DUP 2 AND 0=  …∆ ." NOT "     ‘»≈Œ                        ." CHANGED"             DUP 4 AND     …∆ SAVE-BUFFERS ‘»≈Œ       DUP 6 AND 6 = …∆ ." , SAVED"  ‘»≈Œ           8 AND     …∆ ." , LOADING" CR              SCR @  R# @  SHOWLOAD   ‘»≈Œ ;                                                                                     \ ≈DITOR ∆ORTH83             CLV2:JULL87                                          : L  ( SCR -)   R# OFF  EDIT ;           : R  ( -)       SCR @ EDIT ;             : +L ( N -)     SCR @ + L ;                                                       : V  ( -) ( TEXT)                         '  >NAME  ?DUP …∆  4 - @  ‘»≈Œ  ;                                                : VIEW  ( -) ( TEXT)                      V ?DUP                                   …∆  L  ≈Ã”≈  ." FROM KEYBOARD"  ‘»≈Œ ;                                           ≈DITOR DEFINITIONS                                                                (16 ‹ : CURADDR \ --¡DDR                      LINPTR @ CUROFS C@ + ; √)                                                    : CURLIN  ( --CUR¡DDR LINÃEN) \ & ≈œÃN   (64 LINPTR @ $ƒ5 C@ -TRAILING                 DUP $D3 C! √)                       (16 $1B CON! ASCII J CON! CURADDR            $1B CON! ASCII K CON! $1D CON!            CURADDR  OVER - √) ;                                                        ( ≈DIDECODE                  CLV26.3.87)                                          : EDIDECODE  ( ADR CNT1 KEY -- ADR CNT2)  $8ƒ CASE? …∆  IMODE OFF CR EXIT  ‘»≈Œ    #CR CASE? …∆  IMODE OFF                 CURLIN DUP SPAN @ U> …∆ DROP SPAN @ ‘»≈Œ   BOUNDS ?ƒœ                               2DUP +  … C@ SCR>CBM  SWAP C!  1+ Ãœœ–   DUP SPAN !  EXIT  ‘»≈Œ                  DUP CHAR C!                              $12 FINDKEY EXECUTE ?BLINK DROP ;                                                                                         : EDIEXPECT ( ADDR LEN1 -- )              INITPTR  SPAN !                          0 ¬≈«…Œ  DUP SPAN @  U<                    ◊»…Ã≈  KEY DECODE  “≈–≈¡‘              2DROP SPACE ;                                                                    …NPUT: EDIBOARD                           C64KEY C64KEY? EDIDECODE EDIEXPECT ;                                             EDIBOARD                                                                                                                  ( .STATUS                     15JUN85RE)                                          ' NOOP …S .STATUS                                                                 : .BLK  ( -)                              BLK @ ?DUP …∆  ."  ¬LK " U. ?CR  ‘»≈Œ ;                                          ' .BLK …œNLYFORTH                                                                         \NEEDS √ODE -$2¬ +LOAD \ ‘RANS ¡SSEMBLER                                          \NEEDS ‘OOLS   ÷OCABULARY ‘OOLS                                                   ‘OOLS ALSO DEFINITIONS                                                               1 6  +THRU  \ ‘RACER                     7 8  +THRU  \ ‘OOLS FOR DECOMPILING                                            œNLYFORTH                                                                         \\                                                                                ƒIESER WUNDERVOLLE ‘RACER WURDE          VON ¬ERND –ENNEMANN UND √O FUER          DEN ¡TARI ENTWICKELT. …CH LIESS MIR      AUFSCHWATZEN, IHN AN √64/√16 ANZUPASSEN  UND MUSS SAGEN, ES GING ERSTAUNLICH      EINFACH. /CLV                                                                                                             \ TRACER: WCMP VARIABLES      CLV04AUG87                                          ¡SSEMBLER ALSO DEFINITIONS                                                        : WCMP ( ADR1 ADR2--) \ ¡SSEMBLER-ÕACRO   OVER LDA DUP CMP SWAP  \ COMPARES WORD   1+   LDA 1+  SBC ;                                                                                                        œNLY ∆ORTH ALSO ‘OOLS ALSO DEFINITIONS                                            ‹ ÷ARIABLE (◊                            ‹ ÷ARIABLE <IP      ‹ ÷ARIABLE IP>       ‹ ÷ARIABLE NEST?    ‹ ÷ARIABLE TRAP?     ‹ ÷ARIABLE LAST'    ‹ ÷ARIABLE #SPACES                                                                                                                                                                                                                                                                                                                                                                                                                            \ TRACER:CPUSH ONELINE        CLV12OCT87                                          ‹ √REATE CPULL    0  ]                    RP@ COUNT 2DUP + RP! R> SWAP CMOVE ;                                             : CPUSH  ( ADDR LEN -)                    R> -ROT   OVER  >R                       RP@ OVER 1+ - DUP RP!  PLACE             CPULL >R  >R ;                                                                   ‹ : ONELINE  &82 ALLOT KEYBOARD DISPLAY   .STATUS  SPACE  QUERY  INTERPRET         -&82 ALLOT  RDROP                        ( DELETE QUIT FROM TNEXT )  ;                                                    : RANGE ( ADR--) \ ERMITTELT <IP IP>      IP> OFF  DUP <IP !                       ¬≈«…Œ 1+ DUP @                             [ ∆ORTH ] ['] UNNEST = ’Œ‘…Ã           3+ IP> ! ;                                                                                                                                                                                                                                          \ TRACER:STEP TNEXT           CLV04AUG87                                          ‹ √ODE STEP                               $FF # LDA TRAP? STA TRAP? 1+ STA                   “– ÿ) LDA  …– STA              “– )Ÿ LDA  …– 1+ STA  “– 2INC            (◊ LDA  ◊ STA   (◊ 1+ LDA   ◊ 1+ STA    ÃABEL ◊1-  ◊ 1- JMP  END-CODE                                                     ‹ √REATE: NEXTSTEP STEP ;                                                         ÃABEL  TNEXT …– 2INC                      TRAP? LDA  ◊1- BEQ                       NEST? LDA 0=  \ LOW(!)¬YTE TEST          ?[ …– <IP WCMP ◊1- BCC                      …– IP> WCMP ◊1- BCS                   ][ NEST? STX  \ LOW(!)¬YTE CLEAR         ]?                                        TRAP? DUP STX 1+ STX \ DISABLE TRACER    ◊ LDA  (◊ STA    ◊ 1+ LDA   (◊ 1+ STA                                                                                                                                                                                                              \ TRACER:..TNEXT              CLV12OCT87                                           ;C: NEST? @                              …∆ NEST? OFF R> IP> PUSH <IP PUSH           DUP 2- RANGE                             #SPACES PUSH 1 #SPACES +! >R ‘»≈Œ     R@  NEXTSTEP >R                          INPUT PUSH    OUTPUT PUSH                2- DUP LAST' !                           CR #SPACES @ SPACES                      DUP 4 U.R @ DUP 5 U.R SPACE              >NAME .NAME  $10 COL - 0 MAX SPACES .S   STATE PUSH  BLK PUSH  >IN PUSH           [ ' 'QUIT      >BODY ] ÃITERAL  PUSH     [ ' >INTERPRET >BODY ] ÃITERAL  PUSH     #TIB PUSH  TIB #TIB @ CPUSH  R0 PUSH     RP@ R0 !                                 ['] ONELINE …S 'QUIT  QUIT ;                                                                                                                                                                                                                                                                                                          \ TRACER:DO-TRACE TRACEABLE   CLV12OCT87                                          ‹ √ODE DO-TRACE \ INSTALLS ‘Œ≈ÿ‘          TNEXT 0 $100 M/MOD                           # LDA  ŒEXT $C + STA                     # LDA  ŒEXT $B + STA                 $4√ # LDA  ŒEXT $A + STA  ŒEXT JMP      END-CODE                                                                          ‹ : TRACEABLE ( CFA--<…– ) RECURSIVE      DUP @                                    ['] :    @ CASE? …∆ >BODY     EXIT ‘»≈Œ  ['] KEY  @ CASE? …∆ >BODY C@ …NPUT  @ +                    @ TRACEABLE EXIT ‘»≈Œ  ['] TYPE @ CASE? …∆ >BODY C@ œUTPUT @ +                    @ TRACEABLE EXIT ‘»≈Œ  ['] R/W  @ CASE? …∆ >BODY                                  @ TRACEABLE EXIT ‘»≈Œ  @  [ ' ∆ORTH @ @ ] ÃITERAL =                              …∆ @ 3 + EXIT ‘»≈Œ      \ FUER DEF.◊ORTE MIT DOES>               >NAME .NAME ." CAN'T BE ƒ≈¬’«GED"        QUIT ;                                                                                                                   \ TRACER:¬ENUTZER/INNEN-◊ORTE CLV12OCT87                                          : NEST   \ TRACE INTO CURRENT WORD        LAST' @ @ TRACEABLE DROP NEST? ON ;                                              : UNNEST \ PROCEEDS AT CALLING WORD       <IP ON IP> OFF ; \ CLEARS TRAP RANGE                                             : ENDLOOP LAST' @ 4 + <IP ! ;            \ NO TRACE OF NEXT WORD TO SKIP Ãœœ–..                                            ' END-TRACE ¡LIAS UNBUG \ CONT. EXECUT.                                           : (DEBUG  ( CFA-- )                       TRACEABLE RANGE                          NEST? OFF TRAP? ON #SPACES OFF           ‘OOLS DO-TRACE ;                                                                 ∆ORTH DEFINITIONS                                                                 : DEBUG  ' (DEBUG ; \ WORD FOLLOWS                                                : TRACE'            \ WORD FOLLOWS        ' DUP (DEBUG EXECUTE END-TRACE ;                                                \ TOOLS FOR DECOMPILING,      CLV12OCT87                                          ( INTERACTIVE USE                      )                                          œNLYFORTH ‘OOLS ALSO DEFINITIONS                                                  ‹ : ?:  ?CR DUP 4 U.R ." :"  ;           ‹ : @?  DUP @ 6 U.R ;                    ‹ : C?  DUP C@ 3 .R ;                    ‹ : BL  $24 COL - 0 MAX SPACES ;                                                  : S  ( ADR - ADR+)                        ( PRINT LITERAL STRING)                  ?:  SPACE C? 4 SPACES DUP COUNT TYPE     DUP C@ + 1+ BL  ;  ( COUNT + RE)                                                 : N  ( ADR - ADR+2)                       ( PRINT NAME OF NEXT WORD BY ITS CFA)    ?: @? 2 SPACES                           DUP @ >NAME .NAME 2+ BL ;                                                        : K  ( ADR - ADR+2)                       ( PRINT LITERAL VALUE)                   ?: @? 2+ BL ;                                                                   ( TOOLS FOR DECOMPILING, INTERACTIVE   )                                          : D  ( ADR N - ADR+N) ( DUMP N BYTES)     2DUP SWAP ?: 3 SPACES  SWAP 0            ƒœ  C? 1+ Ãœœ–                           4 SPACES -ROT TYPE BL ;                                                          : C  ( ADR - ADR+1)                       ( PRINT BYTE AS UNSIGNED VALUE)          1 D ;                                                                            : B  ( ADR - ADR+2)                       ( PRINT BRANCH TARGET LOCATION )         ?: @? DUP @  OVER + 6 U.R 2+ BL  ;                                               ( USED FOR : )                           ( ŒAME ”TRING ÃITERAL ƒUMP √LIT ¬RANCH ) ( -    -      -       -    -    -      )                                                                                                                                                                                                                                                                                               ( DEBUGGING UTILITIES      BP 19 02 85 )                                                                                   : UNRAVEL   \  UNRAVEL PERFORM (ABORT"    RDROP RDROP RDROP                        CR ." TRACE DUMP IS "  CR                ¬≈«…Œ  RP@   R0 @ -                      ◊»…Ã≈   R>  DUP  8 U.R  SPACE                    2- @  >NAME .NAME  CR            “≈–≈¡‘ÕULTITASKER               ¬– 07APR91PZ                                          œNLYFORTH                                                                         \NEEDS MULTITASK  1 +LOAD  ( SAVE )                                                 2  4 +THRU        \ ‘ASKER             \    5 +LOAD        \ ƒEMOTASK                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   \ ÕULTITASKER               ¬– 13.9.84 )                                          \NEEDS √ODE -$36 +LOAD  \ TRANSIENT ¡SS                                           √ODE STOP                                 ”– 2DEC  …–    LDA  ”– ÿ) STA                     …– 1+ LDA  ”– )Ÿ STA            ”– 2DEC  “–    LDA  ”– ÿ) STA                     “– 1+ LDA  ”– )Ÿ STA            6 # LDY  ”–    LDA  ’– )Ÿ STA                INY  ”– 1+ LDA  ’– )Ÿ STA            1 # LDY  TYA  CLC  ’– ADC  ◊ STA         TXA  ’– 1+ ADC  ◊ 1+ STA                 ◊ 1- JMP   END-CODE                                                              ‹ √REATE TASKPAUSE   ¡SSEMBLER            $2√ # LDA  ’– ÿ) STA  ' STOP @ JMP      END-CODE                                                                          : SINGLETASK                              [ ' PAUSE @ ] ÃITERAL  ['] PAUSE ! ;                                             : MULTITASK   TASKPAUSE ['] PAUSE ! ;                                                                                     \ PASS  ACTIVATE           KS 8 MAY 84 )                                          : PASS  ( N0 .. NR-1 ‘ADR R -- )          ¬≈«…Œ  [ ROT ( ‘RICK ! ) ]                SWAP  $2√ OVER C! \ AWAKE ‘ASK           R> -ROT           \ …– R ADDR            8 + >R            \ S0 OF ‘ASK           R@ 2+ @  SWAP     \ …– R0 R              2+ 2*             \ BYTES ON ‘ASKSTACK                     \ INCL. R0 & …–        R@ @ OVER -       \ NEW ”–               DUP R> 2- !       \ INTO SSAVE           SWAP BOUNDS  ?ƒœ  … !  2 +Ãœœ–  ;      RESTRICT                                                                          : ACTIVATE ( ‘ADR --)                     0 [ -ROT ( ‘RICK ! ) ]  “≈–≈¡‘ ;        -2 ALLOT  RESTRICT                                                                : SLEEP  ( ‘ADR --)                       $4√ SWAP C! ;       \  Õ–-œPCODE                                                 : WAKE  ( ‘ADR --)                        $2√ SWAP C! ;       \ ¬…‘-œPCODE                                                \ BUILDING A ‘ASK           ¬– 13.9.84 )                                          ‹ : TASKERROR  ( STRING -)                STANDARDI/O  SINGLETASK                  ." ‘ASK ERROR : " COUNT TYPE             MULTITASK STOP ;                                                                 : ‘ASK ( RLEN  SLEN -- )                  ALLOT              \ ”TACK               HERE $∆∆ AND $∆≈ =                       …∆ 1 ALLOT ‘»≈Œ     \ 6502-ALIGN         UP@ HERE $100 CMOVE \ INIT USER AREA     HERE  $4√ C,       \  Õ– OPCODE                             \     TO SLEEP ‘ASK   UP@ 1+ @ ,                               DUP  UP@ 1+ !      \ LINK ‘ASK           3 ALLOT            \ ALLOT  ”“ WAKE      DUP  6 -  DUP , ,  \ SSAVE AND S0        2DUP +  ,          \ HERE + RLEN = R0    UNDER  + HERE - 2+ ALLOT                 ['] TASKERROR  OVER                      [ ' ERRORHANDLER >BODY C@ ] ÃITERAL + !  √ONSTANT ;                                                                                                               \ MORE ‘ASKS           KS/BP  26APR85RE)                                          : RENDEZVOUS  ( SEMAPHORADR -)            DUP UNLOCK PAUSE LOCK ;                                                          ‹ : STATESMART                            STATE @ …∆ [COMPILE] ÃITERAL ‘»≈Œ ;                                              : 'S  ( ‘ADR - ADR.OF.TASKUSERVAR)        ' >BODY C@ + STATESMART ; IMMEDIATE                                              \ ”YNTAX:   2  ƒEMOTASK 'S BASE  !       \ MAKES ƒEMOTASK WORKING BINARY                                                   : TASKS  ( -)                             ." Õ¡…Œ " CR UP@ DUP 1+ @                ¬≈«…Œ  2DUP - ◊»…Ã≈                       DUP [ ' R0 >BODY C@ ] ÃITERAL + @        6 + NAME> >NAME .NAME                    DUP C@ $4√ = …∆ ." SLEEPING" ‘»≈Œ CR    1+ @ “≈–≈¡‘  2DROP ;                                                                                                                                                                                       \ ‘ASKDEMO                    CLV12AUG87                                          : TASKMARK ; \NEEDS CBM>SCR : CBM>SCR ;                                           : SCRSTART  ( -- ADR)                      (64 $288 √) (16 $53E √) C@ $100 * ;                                             ÷ARIABLE COUNTER  COUNTER OFF                                                     $100 $100 ‘ASK ¬ACKGROUND                                                         : >COUNT  ( N -)                          ¬ACKGROUND 1 PASS                        COUNTER !                                ¬≈«…Œ  COUNTER @  -1 COUNTER +! ?DUP     ◊»…Ã≈  PAUSE 0 <# #S #>                   0 ƒœ  PAUSE  DUP … + C@  CBM>SCR               SCRSTART … +  C!  Ãœœ–  DROP      “≈–≈¡‘                                   ¬≈«…Œ STOP “≈–≈¡‘ ; \ STOP'S FOREVER    : WAIT  ¬ACKGROUND SLEEP ;               : GO    ¬ACKGROUND WAKE ;                                                         MULTITASK       $100 >COUNT  PAGE                                                \ PRINTER: Z.¬. Ã—550 SERIELL  07APR91PZ                                            œNLYFORTH                                                                         ‹ ' NOOP ¡Ã…¡” )      IMMEDIATE                                                 \ ‹ ' NOOP ¡Ã…¡” (U.PA2 IMMEDIATE        \ ‹ ' NOOP ¡Ã…¡” (U.PC  IMMEDIATE          ‹ ' NOOP ¡Ã…¡” (S     IMMEDIATE          ‹ ' (    ¡Ã…¡” (U.PA2 IMMEDIATE          ‹ ' (    ¡Ã…¡” (U.PC  IMMEDIATE        \ ‹ ' (    ¡Ã…¡” (S     IMMEDIATE                                                 (S                                       ‹ 4 CONSTANT GA  \ GERAETEADRESSE        ‹ 0 CONSTANT SA  \ SEKUNDAERADRESSE      )                                                                                   76 ( Ã—550 PRINTER CONTROLS )                                                     64 LOAD ( 2ND LOADSCREEN )                                                                                                                                                                                \ PRINTER: 2ND LOADSCREEN      07APR91PZ                                          œNLYFORTH                                                                         \NEEDS (S .( 1ST LOADSCREEN? ) ABORT                                              ÷OCABULARY –RINT                         –RINT DEFINITIONS ALSO                                                            √REATE –RTER 2 ALLOT  ( ”EMAPHOR)        –RTER OFF                                                                         (S    1 +LOAD )                                                                       2 3 +THRU                                     LOAD ( PRINTER-CONTROLS )                                                    4 5 +THRU                                                                     œNLYFORTH                                                                         ( CLEAR )                                                                                                                                                          \ SERIELLES P! MIT –UFFER      06APR91PZ                                          (S \ ) \\                                                                         ‹ $100 √ONSTANT BUFLEN                   ‹ ÷ARIABLE –RBUF  BUFLEN ALLOT –RBUF OFF                                          ‹ : >BUF  ( CHAR --)                      –RBUF COUNT + C!  1 –RBUF +! ;                                                   ‹ : FULL?  ( -- F)   –RBUF C@ BUFLEN = ;                                          ‹ : .BUF  ( --)                           –RBUF COUNT -TRAILING                    GA SA BUSOUT BUSTYPE BUSOFF              –RBUF OFF ;                                                                      : P!  ( CHAR --)                          PAUSE  >R                                R@ $√ ( ∆ORMFEED  ) =                    …∆  R> >BUF .BUF EXIT  ‘»≈Œ              R@ $¡ ( ÃINEFEED  ) =                    R@ $ƒ ( √AR“ETURN ) = OR  FULL? OR       …∆  .BUF  ‘»≈Œ  R> >BUF ;                                                       \ 2X P! AM USERPORT            06APR91PZ                                          (U.PA2                                   : P!  \ CHAR --                           $ƒƒ01 C!  $ƒƒ00 DUP C@ 2DUP              $∆¬ AND SWAP C!  4 OR SWAP C!             ¬≈«…Œ  PAUSE  $ƒƒ0ƒ C@ $10 AND           ’Œ‘…Ã ;  )                                                                      (U.PC                                    : P!  \ 8B --                             ¬≈«…Œ  PAUSE  $ƒƒ0ƒ C@  $10 AND  ’Œ‘…Ã   $ƒƒ01 C! ;  )                                                                                                             ‹ : INIT-P!                              (U.PA2  $∆∆ $ƒƒ03 C!                             $ƒƒ02 DUP C@  4 OR SWAP C! )     (U.PC   0 $ƒƒ01 C! $∆∆ $ƒƒ03 C!    )     (S                                 ) ;                                                                                                                                                                                                               \ CBM-ASCII-WANDLUNG           06APR91PZ                                          ‹ : (C>A  ( 8B0 -- 8B1)                  DUP $41 $5¬ UWITHIN …∆ $20 OR  EXIT ‘»≈Œ DUP $√1 $ƒ¬ UWITHIN …∆ $7∆ AND EXIT ‘»≈Œ DUP $ƒ¬ $≈0 UWITHIN …∆ $¡0 XOR ‘»≈Œ ;                                             ‹ DEFER C>A                                                                       : CONVERT  ['] (C>A …” C>A ;             : LINEAR   ['] NOOP …” C>A ;                                                        CONVERT                                                                                                                                                           ‹ ÷ARIABLE PCOL  PCOL OFF                ‹ ÷ARIABLE PROW  PROW OFF                                                                                                                                                                                                                                                                                                              \ OUTPUT: PRINTER              06APR91PZ                                                                                   ‹ : PEMIT  C>A P!  1 PCOL +! ;           ‹ : PCR   √“≈‘ Ã∆  1 PROW +!  0 PCOL ! ; ‹ : PDEL   ƒ≈Ã  -1 PCOL +! ;             ‹ : PPAGE  ∆∆  0 PROW !  0 PCOL ! ;      ‹ : PAT    ( ZEILE SPALTE -- )             OVER   PROW @ < …∆  PPAGE  ‘»≈Œ          SWAP PROW @ - 0 ?ƒœ PCR Ãœœ–             DUP  PCOL < …∆  √“≈‘  PCOL OFF  ‘»≈Œ     PCOL @ - SPACES ;                      ‹ : PAT?   PROW @  PCOL @ ;              ‹ : PTYPE  ( ADR COUNT --)  DUP PCOL +!   BOUNDS ?ƒœ  … C@ C>A P!  Ãœœ– ;                                                  ‹ œUTPUT: >PRINTER                        PEMIT PCR PTYPE PDEL PPAGE PAT PAT? ;                                                                                                                                                                                                                                                                                                 \ OUTPUT: PRINTER&DISPLAY      06APR91PZ                                          ‹ : BEMIT   DUP  C64EMIT  PEMIT ;        ‹ : BCR          C64CR    PCR   ;        ‹ : BTYPE   2DUP C64TYPE  PTYPE ;        ‹ : BDEL         C64DEL   PDEL  ;        ‹ : BPAGE        C64PAGE  PPAGE ;        ‹ : BAT     2DUP C64AT    PAT   ;                                                 ‹ œUTPUT: >BOTH                           BEMIT BCR BTYPE BDEL BPAGE BAT PAT? ;                                            ∆ORTH DEFINITIONS                                                                 : –RINTER                                  PRINIT  >PRINTER ;                                                              : –ROTOCOL                                 PRINIT  >BOTH ;                                                                                                                                                                                                                                                                             \ RX80 PRINTER CONTROLS        06APR91PZ                                          ‹ : CTRL:  ( 8B --)   √REATE C,            DOES>  ( --)   C@ P! ;                                                             7 CTRL: ¬≈Ã    ‹ $7∆ CTRL: ƒ≈Ã        ‹ $D CTRL: √“≈‘   ‹ $1¬ CTRL: ≈”√          $A CTRL: Ã∆       $0√ CTRL: ∆∆                                                  ‹ : ESC:   ( 8B --)   √REATE C,            DOES>  ( --)   ≈”√ C@ P! ;                                                       $30 ESC: 1/8"       $31 ESC: 1/10"       $32 ESC: 1/6"                            $54 ESC: SUOFF                           $4≈ ESC: +JUMP      $4∆ ESC: -JUMP                                                                                         1 2 +THRU                                                                                                                                                                                                                                                                                    \   RX80 PRINTER CONTROLS      06APR91PZ                                          ‹ : ≈”√2   ≈”√  P! P! ;                                                             : GORLITZ  ( 8B --)   ¬Ã ≈”√2 ;                                                 ‹ : ≈”√"!"  ( 8B --)   $21 ≈”√2 ;                                                 ‹ ÷ARIABLE ÕODUS  ÕODUS OFF                                                       ‹ : ON:  ( 8B --)  √REATE C,               DOES>  ( --)                             C@ ÕODUS C@ OR DUP ÕODUS C! ≈”√"!" ;                                            ‹ : OFF:  ( 8B --)   √REATE $∆∆ XOR C,     DOES>  ( --)                             C@ ÕODUS C@ AND DUP ÕODUS C! ≈”√"!" ;                                            $10 ON: +DARK    $10 OFF: -DARK          $20 ON: +WIDE    $20 OFF: -WIDE          $40 ON: +CURSIV  $40 OFF: -CURSIV        $80 ON: +UNDER   $80 OFF: -UNDER           1 ON: 12CPI      1 OFF: 10CPI            4 ON: +COND      4 OFF: -COND                                                 \   RX80 PRINTER CONTROLS      07APR91PZ                                          : SUPER   0 $53 ≈”√2 ;                   : SUB     1 $53 ≈”√2 ;                   : LINES  ( #LINES --)  $43 ≈”√2 ;        : "LONG  ( INCHES --)   0 LINES P! ;     : AMERICAN   0 $52 ≈”√2 ;                : GERMAN     2 $52 ≈”√2 ;                                                         : PRINIT                                    INIT-P!                                 CONVERT                                  ÕODUS OFF  10CPI  AMERICAN  SUOFF        1/6"  $C "LONG  √“≈‘ ;                                                          (   ¡SCII X GORLITZ  ¡SCII B GORLITZ         ¡SCII E GORLITZ  ¡SCII T GORLITZ         ¡SCII Z GORLITZ  ¡SCII L GORLITZ )                                                                                                                                                                                                                                                                                                 \ ÷√ 1526 –RINTER √ONTROLS     06APR91PZ                                          ‹ : CTRL:  ( 8B --)   √REATE C,            DOES>  ( --)   C@ P! ;                                                          ‹ $D CTRL: √“≈‘   ‹ $1¬ CTRL: ≈”√        ‹ : Ã∆ ;                                                                          ‹ VARIABLE #LINES                        : LINES  ( #LINES -- )  #LINES ! ;                                                ‹ : ∆∆  #LINES @  PROW @ OVER MOD                ƒœ √“≈‘ Ãœœ– ;                                                            ‹ : ƒ≈Ã [COMPILE] ; [COMPILE] \ ;                ( TRICK )                                                                                                          ‹ : PRINIT                                    INIT-P!  72 LINES  LINEAR ;                                                                                                                                                                                                                     \ √–-80 –RINTER √ONTROLS       06APR91PZ                                          ‹ : CTRL:  ( ¬ -)   √REATE C,              DOES>  ( -)   C@ P! ;                                                              07 CTRL: ¬≈Ã    ‹ $7∆ CTRL: ƒ≈Ã       ‹ $0ƒ CTRL: √“≈‘   ‹ $1¬ CTRL: ≈”√         $0¡ CTRL: Ã∆       $0√ CTRL: ∆∆                                                 ‹ : ESC:   ( ¬ -)   √REATE C,              DOES>  ( -)   ≈”√ C@ P! ;                                                        $30 ESC: 1/8"       $31 ESC: 1/10"       $32 ESC: 1/6"       $20 ESC: GORLITZ                                             ‹ : ≈”√2   ≈”√  P! P! ;                                                            $0E ESC: +WIDE  $14 ESC: -WIDE           $45 ESC: +DARK  $46 ESC: -DARK           $47 ESC: +DUB   $48 ESC: -DUB            $0F ESC: +COND  $12 ESC: -COND                                                   : +UNDER 1 $2ƒ ESC2 ;                    : -UNDER 0 $2ƒ ESC2 ;     1 +LOAD                                                \   √–-80 –RINTER √ONTROLS     07APR91PZ                                            $54 ESC: SUOFF                                                                  : SUPER   0 $53 ≈”√2 ;                                                            : SUB     1 $53 ≈”√2 ;                                                            : LINES  ( LINES -)   $43 ≈”√2 ;                                                  : "LONG  ( INCHES -)   0 LINES P! ;                                               : AMERICAN   0 $52 ≈”√2 ;                                                         : GERMAN     2 $52 ≈”√2 ;                                                         : PSPACES  ( N -)                          0 SWAP BOUNDS ?ƒœ  ¬Ã P!  Ãœœ– ;                                                : PRINIT   INIT-P! CONVERT                 AMERICAN  SUOFF  1/6"                    &12 "LONG  √“≈‘ ;                                                                                                                                                \ Ã—550 PRINTER CONTROLS       07APR91PZ                                          ‹ : CTRL:  ( 8B --)   √REATE C,            DOES>  ( --)   C@ P! ;                                                             7 CTRL: ¬≈Ã    ‹ $7∆ CTRL: ƒ≈Ã          $D CTRL: √“≈‘     $1¬ CTRL: ≈”√          $A CTRL: Ã∆       $0√ CTRL: ∆∆           $F CTRL: +COND    $12 CTRL: -COND                                               ‹ : ESC:   ( 8B --)   √REATE C,            DOES>  ( --)   ≈”√ C@ P! ;                                                        $4≈ ESC: +JUMP      $4∆ ESC: -JUMP       $50 ESC: 10CPI      $4D ESC: 12CPI       $67 ESC: 15CPI                           $34 ESC: +ITAL      $35 ESC: -ITAL       $45 ESC: +DARK      $46 ESC: -DARK       $40 ESC: PRESET                          $30 ESC: 1/8"       $32 ESC: 1/6"      ‹ $41 ESC: N/60"                           : /60" ( N -- ) N/60" P! ;                                           1 +LOAD                                                                                     \   Ã—550 PRINTER CONTROLS     07APR91PZ                                          ‹ : ESC2:  ( 8B1 8B2 --)   √REATE C, C,    DOES>  ≈”√  DUP C@ P!  1+ C@ P! ;                                                 1 $57 ESC2: +WIDE                        0 $57 ESC2: -WIDE                        1 $77 ESC2: +HIGH                        0 $77 ESC2: -HIGH                        1 $2D ESC2: +UNDER                       0 $2D ESC2: -UNDER                       0 $53 ESC2: SUPER                        1 $53 ESC2: SUB                            $54 ESC:  SUOFF                        1 $78 ESC2: Ã—                           0 $78 ESC2: DRAFT                        0 $52 ESC2: AMERICAN                     2 $52 ESC2: GERMAN                                                              ‹ $43 ESC: LIN                             : LINES  ( #LINES --)  LIN P! ;          : "LONG  ( INCHES --)   0 LINES P! ;                                            ‹ : PRINIT  INIT-P! CONVERT ;                                                    \ 2SCR'S NSCR'S THRU           06APR91PZ                                          ONLYFORTH PRINT ALSO FORTH                                                        ‹ : 2SCR'S  ( BLK1 BLK2 --)   CR Ã∆       10CPI +COND +WIDE +DARK $15 SPACES       OVER 3 .R $13 SPACES DUP 3 .R            -DARK -WIDE CR  B/BLK 0 ƒœ                CR … C/L / $15 .R  4 SPACES              OVER BLOCK … +  √/Ã 1- TYPE  5 SPACES    DUP  BLOCK … +  √/Ã 1- -TRAILING TYPE   √/Ã +Ãœœ–  2DROP -COND CR ;                                                      ‹ : NSCR'S  ( BLK1 N -- BLK2)   2DUP      BOUNDS ƒœ …  OVER … + 2SCR'S Ãœœ– + ;                                            : PTHRU  ( FROM TO --)                    –RTER LOCK  œUTPUT PUSH –RINTER  1/8"    1+ OVER - 1+ -2 AND 6 /MOD               ?DUP …∆ SWAP >R                          0 ƒœ 3 NSCR'S 3+ PAGE Ãœœ–  R> ‘»≈Œ      ?DUP …∆ 1+ 2/ NSCR'S PAGE ‘»≈Œ DROP      –RTER UNLOCK ;                                                                                                           \ –RINTING WITH SHADOWS        06APR91PZ                                          ONLYFORTH PRINT ALSO FORTH                                                        ‹ : 2SCR'S  ( BLK1 BLK2 --)               CR Ã∆  10CPI +COND +WIDE +DARK           $15 SPACES  DUP  3 .R                    -DARK -WIDE CR  B/BLK 0 ƒœ                CR … C/L / $15 .R  4 SPACES              DUP  BLOCK … +  √/Ã 1- TYPE  5 SPACES    OVER BLOCK … +  √/Ã 1- -TRAILING TYPE   √/Ã +Ãœœ–  2DROP -COND CR ;                                                      ‹ : NSCR'S  ( BLK1 N -- BLK2)             0 ƒœ DUP [ ≈DITOR ]  SHADOW @   2DUP     U> …∆ NEGATE ‘»≈Œ                        + OVER 2SCR'S 1+ Ãœœ– ;                                                          : DOKUMENT  ( FROM TO --)                 –RTER LOCK  œUTPUT PUSH  –RINTER         1/8"  1+ OVER - 3 /MOD                   ?DUP …∆ SWAP >R                          0 ƒœ 3 NSCR'S PAGE Ãœœ–  R> ‘»≈Œ         ?DUP …∆ NSCR'S PAGE ‘»≈Œ DROP            –RTER UNLOCK ;                         \ 2SCR'S NSCR'S THRU           06APR91PZ                                          ONLYFORTH PRINT ALSO FORTH               ‹ $40 √ONSTANT √/Ã                                                                ‹ : 2SCR'S  ( BLK1 BLK2 --)               PCR Ã∆ Ã∆ 10CPI +DARK  $12 SPACES        OVER 3 .R  $20 SPACES DUP 3 .R           CR +COND -DARK                           $10 √/Ã * 0 ƒœ CR OVER BLOCK … + √/Ã     6 SPACES TYPE 2 SPACES                   DUP BLOCK … + √/Ã -TRAILING TYPE         √/Ã  +Ãœœ–  2DROP -COND CR ;                                                     ‹ : NSCR'S ( BLK1 N -- BLK2)   UNDER 0    ƒœ 2DUP DUP ROT + 2SCR'S 1+ Ãœœ– NIP ;                                           : 64PTHRU  ( FROM TO --)                  –RTER LOCK  >ASCII PUSH  >ASCII OFF      œUTPUT PUSH  –RINTER                     1/6" 1+ OVER - 1+ -2  AND 6 /MOD         ?DUP …∆ SWAP >R                          0 ƒœ 3 NSCR'S 2+ 1+ PAGE Ãœœ–  R> ‘»≈Œ   ?DUP …∆ 1+ 2/ NSCR'S PAGE ‘»≈Œ DROP      –RTER UNLOCK  ;                        \ –RINTSPOOL                   02OCT87RE                                          \NEEDS TASKS  .( ‘ASKER?!) \\                                                     $100 $100 ‘ASK –RINTSPOOL                                                         : SPOOL  ( FROM TO --)                    –RINTSPOOL 2 PASS                                                                 PTHRU                                    STOP ;                                                                           : ENDSPOOL  ( --)                         –RINTSPOOL ACTIVATE                      STOP ;                                                                                                                                                                                                                                                                                                                                                                                                                                                           \ 3SCR'S NSCR'S THRU           06APR91PZ ONLYFORTH PRINT ALSO FORTH                                                        ‹ : 3SCR'S  ( BLK  - )                    CR  -COND +DARK                           $8 SPACES DUP    3 .R                   $19 SPACES DUP 1+ 3 .R                   $19 SPACES DUP 2+ 3 .R                   CR  +COND  -DARK  Ã/” √/Ã *  0 ƒœ         CR          DUP  BLOCK … + √/Ã 1- TYPE    8 SPACES DUP 1+ BLOCK … + √/Ã 1- TYPE    8 SPACES DUP 2+ BLOCK … + √/Ã 1- TYPE  √/Ã +Ãœœ–  DROP  CR Ã∆ ;                                                         ‹ : NSCR'S ( BLK1 N - BLK2)  UNDER 0      ƒœ DUP 3SCR'S OVER + Ãœœ– NIP ;                                                  : PTHRU  ( FROM TO -)                     œUTPUT @ -ROT  –RINTER –RTER LOCK 1/8"   10CPI  1+ OVER - 1+ 9 /MOD               ?DUP …∆ SWAP >R                          0 ƒœ 3 NSCR'S  PAGE Ãœœ–  R> ‘»≈Œ        ?DUP …∆ 1- 3 / 1+ 0                        ƒœ DUP 3SCR'S 3 + Ãœœ–  ‘»≈Œ DROP      –RTER UNLOCK  œUTPUT ! ;               \ PRINTER ROUTINEN             07APR91PZ                                          œNLY ∆ORTH ALSO DEFINITIONS                                                       4 √ONSTANT ¬/SCR                                                                  : .LINE  ( LINE# SCR# --)                  BLOCK SWAP C/L * + C/L 1- TYPE ;                                                : .===                                    C/L 1- 0 ƒœ  ¡SCII = EMIT  Ãœœ– ;                                                : PRLIST ( SCR# --)                       DUP BLOCK DROP    PRINTER                $≈ EMIT ." ”CREEN ŒR. " DUP . $14 EMIT   CR .=== CR                               L/S 0 ƒœ … OVER .LINE CR Ãœœ– DROP       .=== CR CR CR  DISPLAY ;                                                                                                                                                                                                                                                                                                              \ PFINDEX                      02OCT87RE                                          œNLYFORTH –RINT ALSO                                                              : PFINDEX  ( FROM TO --)                  –RTER LOCK  –RINTER  &12 "LONG           +JUMP  FINDEX  CR PAGE  -JUMP            –ÃONG SR FUER √16        CLV08AUG87                                                                                   ƒAS ”PEICHERMODELL:                                                               $0000 - $8000 : ÃOW“¡Õ                   $8000 - $FFFF : »IGH“¡Õ  & “œÕ                                                    ¡UF “œÕ SCHALTEN   ¡UF “¡Õ SCHALTEN      SYS KANN WIE JSR BEUTZT WERDEN                                                                                             EIN “œÕ-“UF DER ¡RT '0FFD2 SYS'                                                    ROM JSR RAM  == $FF3E STA JSR $FF3F STA                                          DAS GEHT NATUERLICH NICHT, WENN          »≈“≈ GROESSE $8000 IST. ◊ARUM WOHL?                                               --- ¬EIM C64 ÃASSEN SICH ¬ASIC UND        ¬ETRIEBSSYSTEM GETRENNT SCHALTEN.        ƒIESE ÕAKROS SIND NUR FUER DAS           ¬ASIC-“OM NOETIG.                                                                                                        \\ ZU ÃONG SR FUER √16      CLV20AUG87RE                                          ¡√»‘’Œ«! BEI FALSCHER ¬ENUTZUNG                   ”YSTEMABSTURZ                                                                                                     DAS ÕAKRO MUSS IMMER UNTER $8000 LIEGEN                                           EIN ¡UFRUF DER ∆ORM ' $FFD2 SYSÕACRO'    GIBT:                                       PHA                                      $FF # LDA  ÃœŒ«1 2+ STA                  $D2 # LDA  ÃœŒ«1 1+ STA                  PLA  ÃœŒ« JSR                         SO HAT MITTELS ’MLEITUNG DOCH NOCH DER   ”PRUNG INS DRUEBERLIEGENDE “œÕ GEKLAPPT                                           SYS ENTSCHEIDET NUN SELBST, OB ’MLEITUNG ODER NICHT.                                                                       ¡√»‘’Œ«! ƒ¡” ⁄≈“œ-∆LAG WIRD ZERSTOERT!                                                                                                                                                                      ( TRANSIENT ∆ORTH-6502 ¡SSEMCLV20AUG87RE ( ¬ASIS: ∆ORTH ƒIMENSIONS ÷œÃ ……… ŒO. 5)                                          ƒER ¡SSEMBLER WIRD KOMPLETT AUF DEN      »EAP GELADEN UND IST SO NUR BIS ZUM      NAECHSTEN 'CLEAR' ODER 'SAVE' BENUTZBAR, DANACH ISTA                                                                                                                                             ULTRAFORTH 3.8-3††U3†2A††††                                                                                      ˇ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ER KOMPLETT AUS DEM ”PEICHER  ENTFERNT. ≈R IST DANN ZWAR NICHT MEHR    ZU BENUTZEN, ABER ER BELEGT AUCH NICHT   UNNOETIG ””√“…–‘œ“ BY »EINZ ”CHNITTER  07APR91PZ                                          ONLYFORTH DECIMAL                                                                 \NEEDS ENDCASE  131 LOAD  \ CASE                                                  \NEEDS √ODE 4 LOAD \ TANSIENT ¡SS                                                  30 +LOAD   \ CHARSET                     36 +LOAD   \ UMLAUTE                                                               57 LOAD   \ TASKER                                                                63 LOAD   \ PRINTER                                                             ONLYFORTH DECIMAL                                                                  1 29 +THRU \ SCRIPTOR                                                                                                                                                                                                                                                                                                                 \ CONSTANTS               HFS  07APR91PZ                                                                                                8 CONSTANT TAB                          80 CONSTANT CHAR/LINE                    64 CONSTANT LINE/PAPER                   40 CONSTANT COL/DISPLAY                  24 CONSTANT ROW/DISPLAY                                                            0 CONSTANT FIRST.ROW                     0 CONSTANT FIRST.COL        ROW/DISPLAY 1- CONSTANT LAST.ROW         COL/DISPLAY 1- CONSTANT LAST.COL                                                               0 CONSTANT FIRST.CHAR                    0 CONSTANT FIRST.LINE       CHAR/LINE   1- CONSTANT LAST.CHAR        LINE/PAPER  1- CONSTANT LAST.LINE                                                                                          CHAR/LINE LINE/PAPER 1+ *  2*            LIMIT  FIRST @  -  U< C/L 2* AND >IN +!  CR .( SCRIPTOR NEEDS MORE BLOCK BUFFERS) CR ABORT                                                                         \ CONSTANTS/VARIABLES          07APR91PZ                                          133 CONSTANT F.1                         137 CONSTANT F.2                         134 CONSTANT F.3                         138 CONSTANT F.4                         135 CONSTANT F.5                         139 CONSTANT F.6                         136 CONSTANT F.7                         140 CONSTANT F.8                                                                                                           VARIABLE LEFT.WINDOW  LEFT.WINDOW  OFF   VARIABLE UPPER.WINDOW UPPER.WINDOW OFF   VARIABLE LINE.STACK   LINE.STACK   OFF                                                                                                                                                                                                                                                                                                                                                                                                                            \ LINE.LIST PAPER           HF 07APR91PZ                                          CREATE  LINE.LIST                                LINE/PAPER 1+ 2* ALLOT                                                    FIRST @ CONSTANT PAPER                                                            PAPER   CHAR/LINE LINE/PAPER 1+ * +              CONSTANT PRINTER.BUFFER                                                   : INIT.LINE.LIST                           PAPER                                    [ LINE.LIST LINE/PAPER 1+ 2* + ]         LITERAL                                  LINE.LIST                                DO DUP I ! CHAR/LINE +                   2 +LOOP DROP                             LINE.STACK OFF                         ;                                        : INITPAPER                                PAPER                                    [ CHAR/LINE LINE/PAPER 1+ * ] LITERAL    BL FILL INIT.LINE.LIST                 ;                                                                                \ DISPLAY.CHARS             HF 07APR91PZ                                          HEX                                                                               CODE DISPLAY.CHARS ( ADR LEN ---)          2 # LDA ”ETUP JSR 0 # LDY                [[  N CPY 0<>                           ?[[  N 2+ )Y LDA 0≈716 JSR INY            ]]? 0D4 STX 0D8 STX 1 # LDY              ŒEXT JMP                               END-CODE                                                                          DECIMAL                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ DISPLAY-WINDOW          HFS  07APR91PZ                                          : DISPLAY-WINDOW   ( ---)                  AT?                                      0 0 AT                                   LEFT.WINDOW  @                           UPPER.WINDOW @                           DUP ROW/DISPLAY + DUP + LINE.LIST +      SWAP DUP + LINE.LIST +                   DO                                         I @ OVER +            ( CHAR.ADDR )      COL/DISPLAY           ( LEN)             DISPLAY.CHARS                          2 +LOOP                                  DROP                                     OVER UPPER.WINDOW @ + 3 .R               DUP  LEFT.WINDOW  @ + 3 .R               AT                                     ;                                                                                                                                                                                                                                                                                             \ CHAR.ADDR STORE.CHAR    HFS  07APR91PZ                                          : CHAR.ADDR    ( ---)                      AT? SWAP                                 UPPER.WINDOW @ + DUP +                   LINE.LIST + @                            LEFT.WINDOW  @ + +                     ;                                        : STORE.CHAR   ( 8B ---)                   CHAR.ADDR C!                           ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \ INS.CHAR DEL.CHAR         HF 07APR91PZ                                            VARIABLE INSERT   INSERT OFF                                                    ‹ : CHAR.TO.MOVE                             LAST.CHAR LEFT.WINDOW @ - COL -        ;                                                                               : INS.CHAR                                 CHAR.ADDR                                DUP DUP 1+                               CHAR.TO.MOVE                             MOVE                                     C!                                     ;                                                                                 : CLR.CHAR                                 BL CHAR.ADDR                             CHAR.TO.MOVE                             OVER 2DUP 1+ ROT ROT                     MOVE                                     + C!                                   ;                                                                                                                         \ BLANK.LINE HOME              07APR91PZ                                          : BLANK.LINE                               CHAR.ADDR                                CHAR.TO.MOVE 1+                          BL FILL                                ;                                                                                 : HOME                                     UPPER.WINDOW OFF                         LEFT.WINDOW  OFF                         0 0 AT                                 ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   \ CURSOR.DOWN               HF 07APR91PZ                                          : CURSOR.DOWN                              AT?                                      OVER LAST.ROW <                          IF                                        SWAP 1+ SWAP                            ELSE                                      UPPER.WINDOW @                           [ LINE/PAPER ROW/DISPLAY - ] LITERAL     <                                        IF                                        1 UPPER.WINDOW +!                       THEN                                    THEN                                     AT                                     ;                                                                                                                                                                                                                                                                                                                                                                               \ CURSOR.UP               HFS  07APR91PZ                                          : CURSOR.UP                                AT?                                      OVER 0>                                  IF                                         SWAP 1- SWAP                           ELSE                                       UPPER.WINDOW @ 0>                        IF                                         -1 UPPER.WINDOW +!                     THEN                                   THEN                                     AT                                     ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \ CURSOR.RIGHT            HFHF 07APR91PZ                                          : CURSOR.RIGHT                             AT?                                      DUP LAST.COL <                           IF                                        1+                                      ELSE                                      LEFT.WINDOW @                            [ CHAR/LINE COL/DISPLAY - ] LITERAL      <                                        IF                                        1 LEFT.WINDOW +!                        THEN                                    THEN                                     AT                                     ;                                                                                                                                                                                                                                                                                                                                                                               \ CURSOR.LEFT DEL.CHAR    HFS  07APR91PZ                                          : CURSOR.LEFT                              AT?                                      DUP 0>                                   IF                                         1-                                     ELSE                                       LEFT.WINDOW @ 0>                         IF                                         -1 LEFT.WINDOW +!                      THEN                                   THEN                                     AT                                     ;                                                                                 : DEL.CHAR                                 CURSOR.LEFT                              BL STORE.CHAR                          ;                                                                                                                                                                                                                                                    \ TAB.DOWN                HFS  07APR91PZ                                          : TAB.DOWN                                 AT? SWAP                                 UPPER.WINDOW @ + TAB + LAST.LINE MIN     1+ TAB / TAB * 1-                        UPPER.WINDOW @ -                         DUP LAST.ROW >                           IF                                         LAST.ROW - UPPER.WINDOW +!               LAST.ROW                               THEN                                     SWAP AT                                ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \ TAB.UP                  HFS  07APR91PZ                                          : TAB.UP                                   AT? SWAP                                 UPPER.WINDOW @ + TAB - FIRST.LINE MAX    DUP 0>                                   IF                                       1+ TAB / TAB * 1- FIRST.LINE MAX         THEN                                     UPPER.WINDOW @ -                         DUP FIRST.ROW <                          IF                                         UPPER.WINDOW +!                          FIRST.ROW                              THEN                                     SWAP AT                                ;                                                                                                                                                                                                                                                                                                                                                                               \ TAB.LEFT                HFS  07APR91PZ                                          : TAB.LEFT                                 AT?                                      LEFT.WINDOW @ + TAB - FIRST.CHAR MAX     DUP 0>                                   IF                                       1+ TAB / TAB * 1- FIRST.CHAR MAX         THEN                                     LEFT.WINDOW @ -                          DUP FIRST.COL <                          IF                                         LEFT.WINDOW +!                           FIRST.COL                              THEN                                     AT                                     ;                                                                                                                                                                                                                                                                                                                                                                               \ TAB.RIGHT               HFS  07APR91PZ                                          : TAB.RIGHT                                AT?                                      LEFT.WINDOW @ + TAB + LAST.CHAR MIN      1+ TAB / TAB * 1-                        LEFT.WINDOW @ -                          DUP LAST.COL >                           IF                                         LAST.COL - LEFT.WINDOW +!                LAST.COL                               THEN                                     AT                                     ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \ NEXTLINE                  HF 07APR91PZ                                          : NEXT.LINE                                LEFT.WINDOW OFF                          ROW DUP                                  LAST.ROW <                               IF                                        1+                                      ELSE                                      UPPER.WINDOW @                           [ LINE/PAPER ROW/DISPLAY - ] LITERAL     <                                        IF                                        1 UPPER.WINDOW +!                       THEN                                    THEN                                     0 AT                                   ;                                                                                                                                                                                                                                                                                                                                      \ ASK.FILENAME INITDISPLAY     07APR91PZ                                           :      F.SCRATCH " S:" ;                 :      F.DEVICE " @0:" ;                 CREATE F.NAME  30 ALLOT  F.NAME OFF      :      F.TYPE " ,S" ;                    :      F.READ " ,R" ;                    :      F.WRITE " ,W" ;                                                           : .FILENAME 24 7 AT F.NAME COUNT TYPE ;                                           : ASK.FILENAME                             AT?                                      147 CON!                                 24  0 AT ." FILE? "                      24  7 AT                                 F.NAME 1+ 20 C64EXPECT                   SPAN @ F.NAME C!                         AT ;                                                                            : INITDISPLAY                              LEFT.WINDOW  OFF                         UPPER.WINDOW OFF                         147 CON!  .FILENAME  0 0 AT ;                                                  \ OPEN.FILE CLOSE.FILE      HF 07APR91PZ                                           : OPEN.FILE ( F --) ( TRUE WRITE)          8 2 BUSOPEN                              F.DEVICE     COUNT BUSTYPE               F.NAME       COUNT BUSTYPE               F.TYPE       COUNT BUSTYPE               IF   F.WRITE COUNT BUSTYPE               ELSE F.READ  COUNT BUSTYPE THEN          BUSOFF ;                                                                        : CLOSE.FILE                               8 2 BUSCLOSE ;                                                                  : DELETE.FILE                              F.NAME C@                                IF 8 15 BUSOPEN                             8 15 BUSOUT                              F.SCRATCH COUNT BUSTYPE                  F.NAME    COUNT BUSTYPE                  BUSOFF                                   8 15 BUSCLOSE                         THEN ;                                                                                                                 \ WRITE.FILE READ.FILE      HF 07APR91PZ                                          : WRITE.FILE                               F.NAME C@                                IF  TRUE  OPEN.FILE                       8 2 BUSOUT                               [ LINE.LIST LINE/PAPER 2* + ] LITERAL    LINE.LIST                                DO I @ CHAR/LINE BUSTYPE                 2 +LOOP                                 BUSOFF CLOSE.FILE THEN ;                                                        : READ.FILE                                F.NAME C@                                IF FALSE OPEN.FILE                        INIT.LINE.LIST                           8 2 BUSIN                                [ LINE.LIST LINE/PAPER 2* + ] LITERAL    LINE.LIST                                DO I @ CHAR/LINE BUSINPUT                2 +LOOP                                 BUSOFF CLOSE.FILE THEN ;                                                                                                                                         \ PICK.LINE PUT.LINE           07APR91PZ                                          : PICK.LINE                                1 LINE.STACK +!                          LINE.LIST UPPER.WINDOW @ ROW + 2* +      DUP @ SWAP DUP 2+ SWAP DUP               [ LINE.LIST LAST.LINE 1+ 2* + ]          LITERAL                                  SWAP - MOVE                            ;                                                                                 : PUT.LINE                                 LINE.STACK @                             IF -1 LINE.STACK +!                       LINE.LIST UPPER.WINDOW @ ROW + 2* +      DUP                                      DUP 2+ OVER                              [ LINE.LIST LAST.LINE 1+ 2* + ]          LITERAL                                  SWAP - MOVE                              !                                       THEN                                   ;                                                                                                                         \ DIRECTORY               HFS  07APR91PZ                                          ‹ : .BLOCKS BUS@ BUS@ 256 * + . ;                                                 ‹ : BUSDROP 0 DO BUS@ DROP LOOP ;                                                 : DIRECTORY                                AT?                                      147 CON!                                 8 0 BUSOPEN " $" COUNT BUSTYPE BUSOFF    8 0 BUSIN   4 BUSDROP .BLOCKS            BEGIN                                     BUS@ DUP 0=                              IF DROP CR BUS@ 1 BUSDROP 0<>             IF .BLOCKS                               ELSE 2 BUSDROP                           THEN                                    ELSE CON!                                THEN 144 C@ STOP? OR                    UNTIL 8 0 BUSCLOSE                       KEY DROP                                 .FILENAME                                AT                                     ;                                                                                \ INITPRINTER               HF 07APR91PZ                                          ONLYFORTH PRINT ALSO FORTH                                                        : INITPRINTER                               PRTER LOCK                               CONVERT                                  12 "LONG  1/6"                           10CPI DRAFT GERMAN √“≈‘                  PRTER UNLOCK ;                                                                                                          : CONTROL                                   BL WORD 1+ C@ $1F AND                    [COMPILE] LITERAL ;                     IMMEDIATE RESTRICT                                                                                                                                                                                                                                                                                                                                                                                                     \ PRINT.PAPER               HF 07APR91PZ                                          100 100 TASK BACKGROUND                                                           : PRINT.PAPER                              BACKGROUND ACTIVATE                      PRTER LOCK PRINTER                       PRINTER.BUFFER                           LINE.LIST LINE/PAPER 2* + LINE.LIST      DO PAUSE                                  I @ OVER CHAR/LINE MOVE                  CHAR/LINE +                             2 +LOOP                                  DROP                                     PRINTER.BUFFER                           [ CHAR/LINE LINE/PAPER * ] LITERAL +     PRINTER.BUFFER                           DO                                         I CHAR/LINE TYPE CR                    CHAR/LINE +LOOP                          PAGE                                     DISPLAY  PRTER UNLOCK                    BEGIN STOP REPEAT                      ;                                                                                \                           HF 07APR91PZ                                          : AMERICAN.CHARSET                         PRTER LOCK                                AMERICAN             \ PRINTER          PRTER UNLOCK                             ROM.CHARSET           \ DISPLAY          INITDISPLAY                            ;                                                                                 : GERMAN.CHARSET                           PRTER LOCK                                GERMAN               \ PRINTER          PRTER UNLOCK                             RAM.CHARSET UMLAUTE   \ DISPLAY          INITDISPLAY                            ;                                                                                 : HELPTYPE 0 DO CR COUNT TYPE LOOP ;                                                                                                                                                                                                                                                          \ HELP 70 LOAD              HF 07APR91PZ                                          : HELP AT? 147 CON!                      " ∆7     TAB.RIGHT    ∆8     TAB.LEFT"   " ∆5     TAB.DOWN     ∆6     TAB.UP"     " ∆3     PUT.LINE     ∆4     PICK.LINE"  " ∆1     DIRECTORY    ∆2     FILE?"        4 HELPTYPE CR                          " √‘“Ã … …NSERT ON    √‘“Ã œ œVERWRITE"  " √‘“Ã ◊ ◊RITE  FILE  √‘“Ã “ “EAD FILE"  " √‘“Ã ƒ ƒELETE FILE  √‘“Ã » »ELP ME"    " √‘“Ã ¡ ¡MERICAN     √‘“Ã « «ERMAN"     " √‘“Ã – PRINT –ICA   √‘“Ã Œ PRINT ŒLQ"  " √‘“Ã ÿ EÿIT         √‘“Ã ¬ ¬LANK LINE"   6 HELPTYPE                             "  ON" COUNT TYPE CR                     " »œÕ≈   »œÕ≈POSITION"                   " ƒ≈Ã    ƒ≈ÃETE CHARACTER LEFT  CURSOR"  " …Œ”‘   …Œ”ER‘ BLANK     UNDER CURSOR"  " √Ã“    √ÃEA“  CHARACTER UNDER CURSOR"    4 HELPTYPE CR                            KEY DROP .FILENAME AT                  ;                                                                                                                         \ SCRIPTOR F.1 ... F.8      HF 07APR91PZ                                          : SCRIPTOR                                 EMPTY-BUFFERS                            INITPAPER                                INITPRINTER                              GERMAN.CHARSET  \ PRINTER UND DISPLAY    MULTITASK                                DISPLAY-WINDOW                           BEGIN                                    KEY? NOT                                 IF DISPLAY-WINDOW THEN                   KEY                                      CASE  F.1 OF DIRECTORY    ENDOF                F.2 OF ASK.FILENAME ENDOF                F.3 OF PUT.LINE     ENDOF                F.4 OF PICK.LINE    ENDOF                F.5 OF TAB.DOWN     ENDOF                F.6 OF TAB.UP       ENDOF                F.7 OF TAB.RIGHT    ENDOF                F.8 OF TAB.LEFT     ENDOF                                                                           [                                                                                               \ SCRIPTOR CONTROLS         HF 07APR91PZ                                            ]                                        CONTROL A OF AMERICAN.CHARSET ENDOF      CONTROL B OF BLANK.LINE       ENDOF      CONTROL G OF GERMAN.CHARSET   ENDOF      CONTROL I OF INSERT ON        ENDOF      CONTROL H OF HELP             ENDOF      CONTROL N OF PRTER LOCK                               Ã—                                       PRTER UNLOCK                             PRINT.PAPER      ENDOF      CONTROL O OF INSERT OFF       ENDOF      CONTROL P OF PRTER LOCK                               DRAFT                                    PRTER UNLOCK                             PRINT.PAPER      ENDOF      CONTROL R OF READ.FILE        ENDOF      CONTROL D OF DELETE.FILE      ENDOF      CONTROL W OF WRITE.FILE       ENDOF      CONTROL X OF PREV OFF LIMIT FIRST !          ALL-BUFFERS 147 CON! EXIT ENDOF                              [                                                                                               \ SCRIPTOR CR CRSR HOME.... HF 07APR91PZ                                              ]   #CR OF NEXT.LINE    ENDOF                 29 OF CURSOR.RIGHT ENDOF                157 OF CURSOR.LEFT  ENDOF                 17 OF CURSOR.DOWN  ENDOF                145 OF CURSOR.UP    ENDOF                 19 OF HOME         ENDOF                147 OF CLR.CHAR     ENDOF                 20 OF DEL.CHAR     ENDOF                148 OF BL INS.CHAR  ENDOF  DUP     ELSECASE                                   PRINTABLE?                               IF    INSERT @                            IF   INS.CHAR                            ELSE STORE.CHAR                          THEN AT? DUP LAST.COL <                  IF   1+ AT                               ELSE 2DROP CURSOR.RIGHT                  THEN                                    ELSE  DROP                               THEN                                   ENDCASE                                  REPEAT ;                                                                       \ CHARSET ÃOAD-”CREEN       HF 07APR91PZ                                          œNLYFORTH                                                                         \NEEDS √ODE 4 LOAD \ TANSIENT ¡SS                                                  01 +LOAD     \ HIRES GRAPHIC                                                     ‹ ÷OCABULARY CHARSET                                                              CHARSET ALSO DEFINITIONS                                                           02 05 +THRU  \ HIRES GRAPHIC                                                     œNLYFORTH                                                                                                                                                                                                                                                                                                                                                                                                                                                         \ >BYTE HBYTE LBYTE         HFS 170687                                            HEX                                                                               √ODE >BYTE   ( 16B - 8BL 8BH)             ”– )Ÿ LDA PHA TXA ”– )Ÿ STA ”– 2DEC      TXA ”– )Ÿ STA PLA –UTA JMP   END-CODE                                            : HBYTE >BYTE NIP ;                      : LBYTE >BYTE DROP ;                                                              DECIMAL                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      \ «R √ONSTANTEN             HFS 170687                                            HEX                                      ‹ 0288 √ONSTANT SCRPAGE                  ‹ ≈000 √ONSTANT BITMAP                   ‹ ƒ800 √ONSTANT CHARSET                  ‹ √400 √ONSTANT COLRAM                   ‹ √000 √ONSTANT VIDRAM                                                               BITMAP HBYTE 40 /MOD  3 SWAP -        ‹ √ONSTANT BANK                             20 / 8 *                                 COLRAM  HBYTE 3∆ AND 4 / 10 * OR      ‹ √ONSTANT BMOFFS                           VIDRAM  HBYTE 3∆ AND 4 / 10 *            CHARSET HBYTE 3∆ AND 4 / OR           ‹ √ONSTANT TMOFFS                                                                 DECIMAL                                                                                                                                                                                                                                                                                       \ «R MOVECHARSET            HFS 170687                                            HEX                                                                               ‹ √ODE MOVECHARSET                        SEI  32 # LDA  01 STA   DEY  8 # LDX     Œ STY  Œ 2+ STY  ƒ8 # LDA  Œ 1+ STA      CHARSET HBYTE # LDA  Œ 3 + STA            [[                                        [[  Œ )Ÿ LDA  Œ 2+ )Ÿ STA  INY  0= ?]   Œ 1+ INC  Œ 3 + INC  DEX  0= ?]         36 # LDA  01 STA  CLI  INY               ŒEXT JMP  END-CODE                                                               DECIMAL                                                                                                                                                                                                                                                                                                                                                                                                                                                           \ «R TEXT                   HFS 170687                                            HEX                                                                                                                        √ODE TEXT                                  1¬ # LDA ƒ011 STA                        TMOFFS # LDA ƒ018 STA                    Œ«R GRAPHIC FORTH          HFS 170687                                            HEX                                                                               ∆ORTH DEFINITIONS                                                                 : RAM.CHARSET                              CHARSET MOVECHARSET                      ƒƒ00 C@ 00∆√ AND BANK OR ƒƒ00 C!         VIDRAM HBYTE SCRPAGE C!                  TEXT                                   ;                                        : ROM.CHARSET                              œNLYFORTH                                17 ƒ018 C!                               4 SCRPAGE C!                             ƒƒ00 C@  3 OR  ƒƒ00 C! ;                                                        √HARSET DEFINITIONS                                                               DECIMAL                                                                                                                                                                                                     \ UMLAUTE                   HF 07APR91PZ                                          1 4 +THRU                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \   UMLAUTE                 HF 07APR91PZ                                          HEX                                                                               CREATE PARAGRAPH   0 C,                            03C C, 060 C, 07C C, 066 C,              03E C, 006 C, 03C C, 000 C,                                             CREATE UPPER.AE   1B C,                            0DB C, 03C C, 066 C, 07E C,              066 C, 066 C, 066 C, 000 C,                                             CREATE UPPER.OE   1C C,                            066 C, 000 C, 03C C, 066 C,              066 C, 066 C, 03C C, 000 C,                                             CREATE UPPER.UE   1D C,                            066 C, 000 C, 066 C, 066 C,              066 C, 066 C, 03C C, 000 C,                                             DECIMAL                                                                                                                                                                                                     \   UMLAUTE                 HF 07APR91PZ                                          HEX                                                                               CREATE LOWER.AE   5B C,                            066 C, 000 C, 03C C, 006 C,              03E C, 066 C, 03E C, 000 C,                                             CREATE LOWER.OE   5C C,                            000 C, 066 C, 000 C, 03C C,              066 C, 066 C, 03C C, 000 C,                                             CREATE LOWER.UE   5D C,                            000 C, 066 C, 000 C, 066 C,              066 C, 066 C, 03C C, 000 C,                                             CREATE SZ         5E C,                            03C C, 066 C, 066 C, 07C C,              066 C, 066 C, 06C C, 060 C,                                             DECIMAL                                                                                                                                                                                                     \   UMLAUTE                 HF 07APR91PZ                                          HEX                                                                               ‹ : CHANGE.CHAR  ( ADDR --)                  DUP  1+                                  SWAP C@ 08 * 0D800 +                     08 MOVE                                ;                                                                               DECIMAL                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \   UMLAUTE                HFS 07APR91PZ                                          HEX                                                                               : UMLAUTE                                  0DC0E                                    DUP C@ 0FE AND SWAP C! \ INTERRUPT OFF   01 C@                                    01 C@ DUP 0FC AND 01 C! \ RAM EIN        PARAGRAPH   CHANGE.CHAR                  UPPER.AE    CHANGE.CHAR                  UPPER.OE    CHANGE.CHAR                  UPPER.UE    CHANGE.CHAR                  LOWER.AE    CHANGE.CHAR                  LOWER.OE    CHANGE.CHAR                  LOWER.UE    CHANGE.CHAR                  SZ          CHANGE.CHAR                  01 C!                   \ RAM AUS        0DC0E                                    DUP C@ 01  OR  SWAP C! \ INTERRUPT ON  ;                                                                                 DECIMAL                                                                                                                   \ EIN CASE-OF-KONSTRUKT        07APR91PZ ‹ VARIABLE CASELINK                                                                 : CASE ( -- ) ( COMP: -- N 10 )             CASELINK @ CASELINK OFF  10 ;           IMMEDIATE RESTRICT                                                              : OF ( N1 N2 -- N1/-- )                     COMPILE CASE?                            COMPILE ?BRANCH >MARK 11 ;              IMMEDIATE RESTRICT                                                              : ENDOF ( -- )                              COMPILE BRANCH  HERE                     CASELINK @ ,  CASELINK !                 11 ?PAIRS  >RESOLVE ;                   IMMEDIATE RESTRICT                                                              : ELSECASE ;  IMMEDIATE RESTRICT                                                  : ENDCASE   10 ?PAIRS                       CASELINK @ ¬≈«…Œ ?DUP ◊»…Ã≈              DUP @ SWAP >RESOLVE “≈–≈¡‘               CASELINK ! ;                            IMMEDIATE RESTRICT                  \\ ZU TRACER:LOADSCREEN       CLV12OCT87                                                                                   ***∆UER DIE NAECHSTE U4TH-÷ERSION****                                             ∆ALLS JEMAND MAL DIE <…– …–>-”ACHE       ORDNET UND MIT ¡TARI VEREINHEITLICHT,    HIER EIN PAAR KRITISCHE                  ¬EISPIELE ZUM ‘ESTEN:                                                             ‹ : AA DUP DROP ;                        ‹ : BB AA ;                              \\                                       DEBUG BB                                 TRACE' AA                                                                         TRACE' ∆ORTH                                                                                                                                                        ÕEIN ÷ERDACHT: ƒAS …– 2INC FINDET BEI    √¬Õ/¡TARI VORHER BZW. NACHHER STATT.                                                                                                                               \\ ZU TRACER:WCMP VARIABLES   CLV04AUG87                                                                                                                            BENUTZT IN DER ∆ORM: ADR1 ADR2 WCMP      VERGLEICHT DAS GANZE ◊ORT. ƒANACH        IST: √ARRY=1  : (ADR1) >= (ADR2)              √ARRY=0  : (ADR1) <  (ADR2)         MIT DEN ANDERN ∆LAGS IST NIX ANZUFANGEN                                                                                    ‘EMPORAER ”PEICHER FUER ◊                ¬EREICH, IN DEM GETRACED WERDEN SOLL     ∆LAG: INS ◊ORT REIN  ∆LAG: TRACE JA/NEIN HAB ICH VERGESSEN    ”CHACHTELUNGSTIEFE                                                                                                                                                                                                                                                                                                                                                                                                                           \ ZU TRACER:CPUSH ONELINE     CLV04AUG87                                                                                                                                                                     SICHERT Ã≈Œ BYTES AB ¡ƒƒ“ AUF DEM        “ETURN-”TACK. ƒAS NAECHSTE ’ŒŒ≈”‘        ODER ≈ÿ…‘ TUT SIE WIEDER ZURUECK                                                                                           DIE NEUE »AUPTBEFEHLSSCHLEIFE.           ≈RMOEGLICHT DIE ≈INGABE EINER ⁄EILE.                                                                                                                                ERMITTELT DEN ZU TRACENDEN ¬EREICH                                                                                                                                                                                                                                                                                                                                                                                       \ ZU TRACER:STEP TNEXT        CLV04AUG87                                          WIRD AM ≈NDE VON ‘Œ≈ÿ‘ AUFGERUFEN,        UM ‘“¡–? WIEDER EINZUSCHALTEN UND        DIE ANGESCHLAGENE Œ≈ÿ‘-“OUTINE           WIEDER ZU REPARIEREN.                                                                                                                                                                                       ƒIESE “OUTINE WIRD AUF DIE Œ≈ÿ‘-“OUTINE  GEPATCHED UND IST DAS ÀERNSTUECK.         ◊ENN NICHT GETRACED WIRD: AB             …NS AKTUELLE ◊ORT REIN?                     NEIN: IST …– IM DEBUG-¬EREICH?                 NEIN: DANN AB                      JA:   DANN HALB(!) LOESCHEN                                                    TRAP? AUSSCHALTEN ( DER ‘RACER SOLL      SICH SCHLIESSLICH NICHT SELBST TRACEN,   WO KOMMEN WIR DENN DA HIN!)                                                                                                                                                                                \ TRACER:..TNEXT              CLV04AUG87                                          ∆ORTH-‘EIL VON ‘Œ≈ÿ‘                      INS AKTUELLE ◊ORT REIN?                     JA: ƒEBUG-¬EREICH PUSHEN, NEUEN              ”CHACHTELUNGSTIEFE INCR.          ”‘≈– SOLL NACHHER AUSGEFUEHRT WERDEN     –’”»ED ALLE WICHTIGE ”ACHEN                                                       GIBT EINE …NFORMATIONSZEILE AUS                                                                                                                                     –’”»ED NOCHMEHR ⁄EUG                                                              –’”»ED DEN “ETURN-”TACK-–OINTER !!       UND TUT SO, ALS WAER DER “”TACK LEER     »AENGT œŒ≈Ã…Œ≈ IN DIE                    »AUPT-¬EFEHLS-”CHLEIFE UND RUFT SIE AUF                                                                                                                                                                                                                                                      \ ZU TRACER:DO-TRACE TRACEABLECLV12OCT87                                          INSTALLIERT (PATCHED) ‘Œ≈ÿ‘ IN Œ≈ÿ‘       (Œ≈ÿ‘ IST DIE INNERSTE “OUTINE,           ZU DER JEDES ◊ORT ZURUECKKEHRT)                                                                                                                                                                            GUCKT, OB ◊ORT GETRACED WERDEN KANN        UND WELCHE ADR DAZUGEHOERT              :      -DEF.  <…–=CFA+2                  …Œ–’‘: -DEF.  <…– AUS INPUT-÷EKTOR                                                œ’‘–’‘:-DEF.  <…– AUS OUTPUT-÷EKTOR                                               ƒ≈∆≈“  -DEF.  <…– AUS [CFA+2]                                                     ƒœ≈”>  -DEF.  <…–=[CFA]+3                                                         ALLE ANDEREN ƒEFINITIONEN GEHEN NICHT                                                                                                                                                                      \ ZU TRACER:¬ENUTZER-◊ORTE    CLV12OCT87                                          Œ≈”‘ ERLAUBT DAS »INEINSTEIGEN IN             EIN GETRACEDES ◊ORTE                                                         ’ŒŒ≈”‘ FUEHRT DAS ◊ORT ZUENDE UND             TRACED DANN WIEDER.                                                          ≈ŒƒÃœœ– TRACED ERST HINTERM NAECHSTEN         ◊ORT WIEDER (Z.¬. BEI Ãœœ–S)                                                 ’Œ¬’« SCHALTET JEGLICHES GETRACE AB.                                                                                                                                                                                                                                                           ƒ≈¬’« <WORD> SETZT DEN ZU TRACENDEN           ¬EREICH. ◊ENN <WORD> ANSCHLIESSEND       AUSGEFUEHRT WIRD, MELDET SICH DER        ‘RACER.                                                                      ‘“¡√≈' FUEHRT <WORD> GLEICH NOCH AUS.                                            \\ ZU TOOLS FOR DECOMPIL  01OCT87CLV/RE)                                          \ ◊ENN ZUM ¬EISPIEL DAS ◊ORT                                                                                               : TEST 5   0   ƒœ    ." MAGST ƒU MICH ?"     KEY ¡SCII J =                            …∆   ." SELBER SCHULD " LEAVE            ≈Ã”≈ ." ¡BER BESTIMMT " ‘»≈Œ Ãœœ–ƒIESES ”¡÷≈ HAT MIR SCHON X-MAL DEN      TRANSIENTEN ¡SSEMBLER, DEN ICH NOCH      BRAUCHTE, RAUSGESCHMISSEN. ƒESHALB       HABE ICH ES AUSKOMMENTIERT.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             \ SAVESYSTEM                   07APR91PZ                                          ‹ : (SAVSYS ( ADR LEN -- )                [ ¡SSEMBLER ] ŒEXT  [ ∆ORTH ]            ['] PAUSE  DUP PUSH  !  \ SINGLETASK     I/O PUSH  I/O OFF  BUSTYPE ;                                                     : SAVESYSTEM   \ NAME MUSS FOLGEN            \ ∆ORTH-ÀERNAL VORBEREITEN:           SCR PUSH  1 SCR !  R# PUSH  R# OFF          \ ≈DITOR VORBEREITEN:                 [ \NEEDS ≈DITOR                  (       ≈DITOR ]  STAMP$ DUP PUSH OFF                      (PAD   DUP PUSH OFF [  ( )     ]  \ NUN GEHT'S LOS:                     SAVE                                     8 2 BUSOPEN  0 PARSE BUSTYPE             " ,P,W" COUNT BUSTYPE  BUSOFF            8 2 BUSOUT  ORIGIN $17 -                 DUP  $100 U/MOD  SWAP BUS! BUS!          HERE OVER - (SAVSYS  BUSOFF              8 2 BUSCLOSE                             0 (DRV ! DERROR? ABORT" SAVE-ERROR" ;                                            œNLYFORTH                               \ BAMALLOCATE, FORMATDISK      07APR91PZ                                          : BAMALLOCATE ( --)                       DISKOPEN ?EXIT                           PAD &18 0 READSECTOR 0=                   …∆ PAD 4 + $8√ ERASE                        PAD &18 0 WRITESECTOR DROP            ‘»≈Œ  DISKCLOSE                         8 &15 BUSOUT " I0" COUNT BUSTYPE         BUSOFF ;                                                                         : FORMATDISK ( --)  \ ŒAME MUSS FOLGEN    8 &15 BUSOUT " N0:" COUNT BUSTYPE        0 PARSE BUSTYPE BUSOFF                   DERROR? ?EXIT                            BAMALLOCATE ;                                                                    \ Z.¬.: FORMATDISK ULTRA∆œ“‘»,ID                                                                                                                                                                                                                                                               ∆œ“‘»-«≈”≈ÃÃ”√»¡∆‘  (C) BP/KS/RE/WE/CLV \ COPYDISK                    007APR91PZ                                          ‹ ÷ARIABLE DISTANCE                                                               LIMIT FIRST @ - B/BUF /  ‹ √ONSTANT BUFS                                          ‹ : BACKUPBUFS  ( FROM COUNT --)          CR ." …NSERT ”OURCE-ƒISK" KEY DROP CR    BOUNDS 2DUP ƒœ  … BLOCK DROP  Ãœœ–       CR ." …NSERT ƒESTINATION-ƒISK"           KEY DROP CR                              DISTANCE @ ?DUP                          …∆    >R  SWAP 1- OVER  R> +  CONVEY     ≈Ã”≈  ƒœ  … BLOCK DROP UPDATE  Ãœœ–            SAVE-BUFFERS ‘»≈Œ ;                                                        : COPYDISK  ( BLK1 BLK2] [TO.BLK --)      2 PICK - DISTANCE !  1+ OVER -           DUP 0> NOT ¡BORT" “¡Œ«≈ ≈““œ“!"          BUFS /MOD ?DUP                           …∆ SWAP >R 0                                ƒœ DUP BUFS BACKUPBUFS BUFS +  Ãœœ–      R> ‘»≈Œ                               ?DUP …∆ BACKUPBUFS ≈Ã”≈ DROP ‘»≈Œ∆ORMULAR ZUM ÃADEN EINES == 07APR91PZ ====== ƒRUCKERTREIBERS =======                                                    ≈S BRAUCHEN NUR DIE MIT '*' MARKIERTEN   ”TELLEN VERAENDERT WERDEN:                                                        * »IER WAEHLT MAN DURCH ¡USKOMMENTIEREN  * MIT '\' DIE ”CHNITTSTELLE: ”ERIELLER   * ¬US ODER ’SERPORT MIT ENTWEDER –¡2     * ODER –√ ALS ”TROBE-ÃEITUNG ( ¬EI DEN   * MIR BEKANNTEN ’SERPORT-ÀABELN WIRD     * –¡2 VERWENDET.)                                                                                                            * ÷ERWENDET MAN DEN SERIELLEN ¬US, SO    * MUSS HIER DIE «ERAETE- UND               ”EKUNDAERADRESSE FESTGELEGT WERDEN.                                             ** ”CHLIESSLICH MUSS HIER DIE ŒUMMER        EINES ÃOADSCREENS FUER ƒRUCKER-          ”TEUERZEICHEN EINFACH ANGEGEBEN          WERDEN. ≈R WIRD VOM 2ND LOADSCREEN       AN DER RICHTIGEN ”TELLE GELADEN.                                                                                     ÃOADSCREEN DES ‘REIBERS        07APR91PZ                                          SETZT ORDER AUF ∆œ“‘» ∆œ“‘» œŒÃŸ   ∆œ“‘»                                          …M 1. LOADSCREEN MUESSEN (S (U.XX ETC    DEFINIERT WERDEN !                                                                                                                                                  FUER MULTITASKING                                                                                                          ƒER NAECHSTEN ”CREEN IST NUR FUER DEN     SERIELLEN ¬US                           ‘REIBER ‘EIL 1                           ƒIE ŒUMMER DES ”CREENS MIT DEN –RINTER-   √ONTROLS MUSS AUF DEM ”TAPEL LIEGEN.    ‘REIBER ‘EIL 2                                                                                                             ƒAS ANSCHLIESSENDE √Ã≈¡“ SOLLTE MAN      LIEBER VON »AND DURCHFUEHREN. …CH        AERGERE MICH JEDENFALLS IMMER, WENN MIR  IRGENDEIN ÃOADSCREEN DEN TRANSIENTEN     ¡SSEMBLER RAUSSCHMEISST ...             ¬EIM SERIELLEN ¬US IST DIE ¡USG06APR91PZ EINZELNEN ⁄EICHENS ZU LANGSAM                                                                                              ¬UFFERLAENGE                             ¬UFFER FUER ⁄EICHEN ZUM ƒRUCKER                                                   EIN ⁄EICHEN ZUM ¬UFFER HINZUFUEGEN                                                                                         ¬UFFER VOLL?                                                                      ¬UFFER AUSDRUCKEN UND LEEREN                                                                                                                                                                                 »AUPTAUSGABEROUTINE FUER SERIELLEN ¬US   ⁄EICHEN MERKEN                           IST ES EIN ∆ORMFEED?                       JA, ¬UFFER AUSDRUCKEN INCL. ∆ORMFEED   IST ES EIN ÃINEFEED?                     ODER EIN √“ ODER IST DER ¬UFFER VOLL?      JA, ¬UFFER AUSDRUCKEN, √“/Ã∆ MERKEN                                                                           06APR91PZ                                          ⁄EICHENAUSGABE AM ’SERPORT               MIT ”TROBE AN –¡2:                       ⁄EICHEN AUF –ORT  , ”TROBE-–ULS           'VON »AND' ERZEUGEN    UND AUF DIE      NEGATIVE ∆LANKE VON ¬USY BZW. ¡CKNLG     WARTEN.                                                                           ⁄EICHENAUSGABE AM ’SERPORT               MIT ”TROBE AN –√:                        LETZTE NEGATIVE ∆LANKE ABWARTEN (S.O.)   ⁄EICHEN AUF –ORT; ”TROBE WIRD VOM √…¡-   ¬AUSTEIN AUTOMATISCH ERZEUGT.                                                     …NITIALISIERUNG DER ”CHNITTSTELLE:               –ORT AUF ¡USGABE                         ”TROBE AUF »IGH                          ”TROBE GEBEN & –ORT AUF ¡USGABE   ”ERIELL BRAUCHT KEINE …NITIALISIERUNG                                                                                                                                                                                                                                              06APR91PZ                                          WANDELT √OMMODORE'S ”PECIAL-¡SCII IN     ORDINAERES ¡”√……                                                                                                                                                    ◊ANDLUNG UMSCHALTBAR MACHEN                                                       ◊ANDLUNG EINSCHALTEN                     ◊ANDLUNG AUSSCHALTEN                                                              ƒEFAULT: EIN                                                                                                                                                        –OSITION DES ƒRUCKKOPFES FUER AT & AT?                                                                                                                                                                                                                                                                                                                                                                         06APR91PZ “OUTINEN ZUR ƒRUCKERAUSGABE      ¬EFEHL                                           EIN ⁄EICHEN AUF ƒRUCKER          EMIT    √“ UND Ã∆ AUF ƒRUCKER            CR      EIN ⁄EICHEN LOESCHEN (?!)        DEL     ∆ORMFEED AUSGEBEN                PAGE    ƒRUCKER AUF ZEILE UND SPALTE     AT      POSITIONIEREN, WENN NOETIG,              NEUE ”EITE                                                                                                                 –OSITION FESTSTELLEN             AT?     ⁄EICHENKETTE AUSGEBEN            TYPE                                                                                      ERZEUGT DIE ¡USGABETABELLE >PRINTER                                                                                                                                                                                                                                                                                                                                                                            06APR91PZ                                          “OUTINEN FUER ƒRUCKER                    UND ¬ILDSCHIRM GLEICHZEITIG (BOTH)                                                ¡USGABE ERFOLGT ZUERST AUF ¬ILDSCHIRM    ( “OUTINEN VON ƒ…”–Ã¡Ÿ )                 DANN AUF ƒRUCKER                         ( “OUTINEN VON >–“…Œ‘≈“ )                                                         ERZEUGT DIE ¡USGABETABELLE >BOTH                                                  ÷ON ∆ORTH AUS ZUGAENGLICH:                                                        LEGT ¡USGABE AUF ƒRUCKER                                                                                                   LEGT ¡USGABE AUF ƒRUCKER UND ¬ILDSCHIRM                                                                                                                                                                                                                                                                                                PRINTER CONTROLS FUER “ÿ80     07APR91PZ                                          'PRINTER CONTROLS' WIRD VOM LOADSCREEN   DES ‘REIBERS GELADEN UND MUSS FOLGENDE   ◊ORTE ZUR ÷ERFUEGUNG STELLEN:            √“≈‘, Ã∆, ∆∆, ƒ≈Ã UND –“…Œ…‘. –“…Œ…‘     MUSS ALS ERSTES …Œ…‘-–! AUSFUEHREN.                                                                                        GIBT ≈SCAPE-”EQUENZEN AN ƒRUCKER                                                                                           ⁄EILENABSTAND IN ⁄OLL                                                             ”UPERSCRIPT UND ”UBSCRIPT AUSSCHALTEN    –ERFORATION UEBERSPRINGEN EIN/AUS                                                                                                                                                                                                                                                                                                                                                                                                                       06APR91PZ                                          ≈SCAPE + 2 ⁄EICHEN                                                                 NUR FUER «OERLITZ-…NTERFACE                                                      SPEZIELLER ≈PSON-”TEUERMODUS                                                        ÀOPIE DES ƒRUCKER-”TEUER-“EGISTERS                                              SCHALTET ¬IT IN ”TEUER-“EGISTER EIN                                                                                                                                 SCHALTET ¬IT IN ”TEUER-“EGISTER AUS                                                                                                                                 ƒIESE ”TEUERCODES MUESSEN FUER ANDERE    ƒRUCKER MIT »ILFE VON CTRL:, ESC: UND    ≈”√2 UMGESCHRIEBEN WERDEN                                                         ⁄EICHENBREITE IN CHARACTERS PER INCH     EVENTUELL DURCH ≈LITE, –ICA UND √OMPRESS ERSETZEN                                                               07APR91PZ                                                                                                                            ¡UFRUF Z.¬.MIT 66 LINES                  ¡UFRUF Z.¬ MIT 11 "LONG                  ⁄EICHENSAETZE, BELIEBIG ERWEIETERBAR                                                                                       …NITIALISIERUNG ...                         ... DER ”CHNITTSTELLE                   √¬Õ-¡”√……-◊ANDLUNG AN                    ƒRUCKER MIT ”TANDARDWERTEN EINSTELLEN                                                                                    ƒIESE …NITIALISIERUNG FUER DAS           «OERLITZ-…NTERFACE KANN MAN NOCH IN      PRINIT EINBAUEN, WENN MAN EIN SOLCHES    HAT. ◊AS DAS ALLES IM EINZELNEN          BEDEUTET, WEISS ICH NICHT. ƒER √ODE      STAMMT VON «EORG “EHFELD (GLAUB ICH).                                                                                                                                                                                                      07APR91PZ ƒIESEN ”CREEN HABE ICH VERBROCHEN, OHNE  DEN 1526 BESONDERS ZU KENNEN. …CH HOFFE, ES TAUGT TROTZDEM EIN BISSCHEN.                                                   √“≈‘ UND ≈”√ GANZ NORMAL                 √OMMODORE HAT ¡UTOLINEFEED NACH √“≈‘                                                                                       ≈INSTELLEN DER ”EITENLAENGE                                                       ”EITENVORSCHUB: ETWAS GETRICKST                                                                                            ƒ≈Ã: NOCH MEHR GETRICKST; BEWIRKT, DASS       PDEL GAR NICHTS TUT.                                                                                                                                                          KEINE √¬Õ-¡”√……-◊ANDLUNG                                           ”EKUNDAERADRESSE IM ÃOADSCREEN           AUF 7 SETZEN                                                                                                                                             07APR91PZ ƒIE √–80-CONTROLS HABE ICH PRAKTISCH     UNVERAENDERT VON √LAUS ÷OGT UEBERNOMMEN.                                                                                                                                                                                                                                                                                                                                                                                                                                                ◊IEDER DAS ≈”√ ' '                       FUER «OERLITZ                                                                                                                                                                                                                    ƒIE ”–”–¡√≈””CHMALSCHRIFT AN/AUS                                                                                                                                                                                         '–ERFORATION UEBERSPRINGEN' AN/AUS                  –ICA                ≈LITE                ÕICROSCHRIFT                  ÀURSIVSCHRIFT AN/AUS                     ∆ETTDRUCK AN/AUS                         ƒRUCKERRESET                             ⁄EILENABSTAND 1/8 ⁄OLL         1/6 ⁄OLL                                               N/60 ⁄OLL, Z.¬. 6 /60" = 1/10 ⁄OLL                                                                                                                                                            07APR91PZ                                                                                                                                                                     ¬REITSCHRIFT AN                                       AUS                         »OCHSCHRIFT AN                                       AUS                          ’NTERSTREICHEN AN                                       AUS                       ”UPERSCRIPT AN ( ≈XPONENTEN- )           ”UBSCRIPT AN   ( …NDEX- )                ”UB- BZW ”UPERSCRIPT AUS                 ”CHOENSCHRIFT                            ”CHNELLSCHRIFT                           ¡MERIKANISCHER ⁄EICHENSATZ               ƒEUTSCHER                                                                         ”EITENLAENGE                               IN ⁄EILEN:  72 LINES                     IN ⁄OLL:    12 "LONG                                                            ÀEINE ¡ENDERUNG DER ƒRUCKEREINSTELLUNG                                                                          06APR91PZ                                                                                                                            GIBT 2 ”CREENS NEBENEINANDER AUS         ”CREENNUMMER IN ∆ETTSCHRIFT UND 17CPI                                                                                      FORMATIERTE ¡USGABE DER BEIDEN ”CREENS                                                                                                                                                                       GIBT DIE ”CREENS SO AUS:   1    4                                   2    5                                   3    6        GIBT DIE ”CREENS VON FROM BIS TO AUS     ¡USGABEGERAET MERKEN UND –RINTER EIN     ERRECHNET ƒRUCKPOSITION DER EINZELNEN    ”CREENS UND GIBT SIE NACH OBIGEM ÕUSTER  AUS                                                                                                                                                                                                                                                                                                                                                                             WIE 2SCR'S (MIT ”HADOW)                                                                                                                                                                                                                                                                                                                                                          WIE NSCR'S (MIT ”HADOW)                                             SCREEN ”HADOW                            SCR+1  ”H+1                                                                                     WIE PTHRU  (MIT ”HADOW)                                                                                                                                                                                                                                                                                                                                                                                                                                           ƒASSELBE NOCHMAL FUER ”TANDARD-∆ORTH     ”CREENS MIT 16 ⁄EILEN ZU 64 ⁄EICHEN                                                                                                                                                                                                                                                                                                     ”IEHE OBEN                                                                                                                 ◊IE PTHRU FUER ”TANDARD-”CREENS                                                                                                                                                                                                                                                                                                                                                 ƒRUCKEN IM ’NTERGRUND                                                             ƒER ‘ASKER WIRD GEBRAUCHT                                                         ƒER ¡RBEITSBEREICH DER ‘ASK WIRD ERZEUGT                                          »INTERGRUND-ƒRUCK EIN                     VON/BIS WERDEN AN DIE ‘ASK GEGEBEN       BEIM NAECHSTEN –¡’”≈ FUEHRT DIE          ‘ASK PTHRU AUS UND LEGT SICH DANN        SCHLAFEN.                                                                        »INTERGRUND-ƒRUCK ABBRECHEN               DIE ‘ASK WIRD NUR AKTIVIERT,             DAMIT SIE SICH SOFORT WIEDER SCHLAFEN    LEGT.                                                                                                                                                                                                                                                                                                                                                                                                                                                  06APR91PZ                                                                                                                            GIBT 2 ”CREENS NEBENEINANDER AUS         ”CREENNUMMER IN ∆ETTSCHRIFT UND 17CPI                                                                                      FORMATIERTE ¡USGABE DER BEIDEN ”CREENS                                                                                                                                                                       GIBT DIE ”CREENS SO AUS:   1    4                                   2    5                                   3    6        GIBT DIE ”CREENS VON FROM BIS TO AUS     ¡USGABEGERAET MERKEN UND –RINTER EIN     ERRECHNET ƒRUCKPOSITION DER EINZELNEN    ”CREENS UND GIBT SIE NACH OBIGEM ÕUSTER  AUS                                                                                                                                                                                                                                                                                                                                                                             WIE 2SCR'S (MIT ”HADOW)                                                                                                                                                                                                                                                                                                                                                          WIE NSCR'S (MIT ”HADOW)                                             SCREEN ”HADOW                            SCR+1  ”H+1                                                                                     WIE PTHRU  (MIT ”HADOW)                                                                                                                                                                                                                                                                                                                                                                                                                                           ƒASSELBE NOCHMAL FUER ”TANDARD-∆ORTH     ”CREENS MIT 16 ⁄EILEN ZU 64 ⁄EICHEN                                                                                                                                                                                                                                                                                                     ”IEHE OBEN                                                                                                                 ◊IE PTHRU FUER ”TANDARD-”CREENS                                                                                                                                                                                                                                                                                                                                                 